/*
* generated by Xtext
*/
grammar InternalScribbleTraceDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.scribble.trace.editor.dsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.scribble.trace.editor.dsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.scribble.trace.editor.dsl.services.ScribbleTraceDslGrammarAccess;

}

@parser::members {
 
 	private ScribbleTraceDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ScribbleTraceDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleTrace
entryRuleTrace 
:
{ before(grammarAccess.getTraceRule()); }
	 ruleTrace
{ after(grammarAccess.getTraceRule()); } 
	 EOF 
;

// Rule Trace
ruleTrace
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraceAccess().getGroup()); }
(rule__Trace__Group__0)
{ after(grammarAccess.getTraceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSentence
entryRuleSentence 
:
{ before(grammarAccess.getSentenceRule()); }
	 ruleSentence
{ after(grammarAccess.getSentenceRule()); } 
	 EOF 
;

// Rule Sentence
ruleSentence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getSentenceAccess().getIDTerminalRuleCall()); }
(	RULE_ID)
{ after(grammarAccess.getSentenceAccess().getIDTerminalRuleCall()); }
)
(
{ before(grammarAccess.getSentenceAccess().getIDTerminalRuleCall()); }
(	RULE_ID)*
{ after(grammarAccess.getSentenceAccess().getIDTerminalRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTracedefn
entryRuleTracedefn 
:
{ before(grammarAccess.getTracedefnRule()); }
	 ruleTracedefn
{ after(grammarAccess.getTracedefnRule()); } 
	 EOF 
;

// Rule Tracedefn
ruleTracedefn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTracedefnAccess().getGroup()); }
(rule__Tracedefn__Group__0)
{ after(grammarAccess.getTracedefnAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRoledefn
entryRuleRoledefn 
:
{ before(grammarAccess.getRoledefnRule()); }
	 ruleRoledefn
{ after(grammarAccess.getRoledefnRule()); } 
	 EOF 
;

// Rule Roledefn
ruleRoledefn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRoledefnAccess().getGroup()); }
(rule__Roledefn__Group__0)
{ after(grammarAccess.getRoledefnAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStepdefn
entryRuleStepdefn 
:
{ before(grammarAccess.getStepdefnRule()); }
	 ruleStepdefn
{ after(grammarAccess.getStepdefnRule()); } 
	 EOF 
;

// Rule Stepdefn
ruleStepdefn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStepdefnAccess().getMessagetransferParserRuleCall()); }
	ruleMessagetransfer
{ after(grammarAccess.getStepdefnAccess().getMessagetransferParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessagetransfer
entryRuleMessagetransfer 
:
{ before(grammarAccess.getMessagetransferRule()); }
	 ruleMessagetransfer
{ after(grammarAccess.getMessagetransferRule()); } 
	 EOF 
;

// Rule Messagetransfer
ruleMessagetransfer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessagetransferAccess().getGroup()); }
(rule__Messagetransfer__Group__0)
{ after(grammarAccess.getMessagetransferAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Trace__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trace__Group__0__Impl
	rule__Trace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceAccess().getTraceAction_0()); }
(

)
{ after(grammarAccess.getTraceAccess().getTraceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trace__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trace__Group__1__Impl
	rule__Trace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceAccess().getTracedefnParserRuleCall_1()); }
	ruleTracedefn
{ after(grammarAccess.getTraceAccess().getTracedefnParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trace__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trace__Group__2__Impl
	rule__Trace__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceAccess().getRolesAssignment_2()); }
(rule__Trace__RolesAssignment_2)*
{ after(grammarAccess.getTraceAccess().getRolesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trace__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trace__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceAccess().getStepsAssignment_3()); }
(rule__Trace__StepsAssignment_3)*
{ after(grammarAccess.getTraceAccess().getStepsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Tracedefn__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tracedefn__Group__0__Impl
	rule__Tracedefn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tracedefn__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracedefnAccess().getTraceKeyword_0()); }

	'trace' 

{ after(grammarAccess.getTracedefnAccess().getTraceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tracedefn__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tracedefn__Group__1__Impl
	rule__Tracedefn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tracedefn__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracedefnAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getTracedefnAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tracedefn__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tracedefn__Group__2__Impl
	rule__Tracedefn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tracedefn__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracedefnAccess().getGroup_2()); }
(rule__Tracedefn__Group_2__0)?
{ after(grammarAccess.getTracedefnAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tracedefn__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tracedefn__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tracedefn__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracedefnAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getTracedefnAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Tracedefn__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tracedefn__Group_2__0__Impl
	rule__Tracedefn__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tracedefn__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracedefnAccess().getByKeyword_2_0()); }

	'by' 

{ after(grammarAccess.getTracedefnAccess().getByKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tracedefn__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tracedefn__Group_2__1__Impl
	rule__Tracedefn__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tracedefn__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracedefnAccess().getSentenceParserRuleCall_2_1()); }
	ruleSentence
{ after(grammarAccess.getTracedefnAccess().getSentenceParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tracedefn__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tracedefn__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tracedefn__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracedefnAccess().getGroup_2_2()); }
(rule__Tracedefn__Group_2_2__0)?
{ after(grammarAccess.getTracedefnAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Tracedefn__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tracedefn__Group_2_2__0__Impl
	rule__Tracedefn__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tracedefn__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracedefnAccess().getShowsKeyword_2_2_0()); }

	'shows' 

{ after(grammarAccess.getTracedefnAccess().getShowsKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tracedefn__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tracedefn__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tracedefn__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTracedefnAccess().getSentenceParserRuleCall_2_2_1()); }
	ruleSentence
{ after(grammarAccess.getTracedefnAccess().getSentenceParserRuleCall_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getModuleAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_1()); }
(rule__Module__Group_1__0)*
{ after(grammarAccess.getModuleAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Module__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_1__0__Impl
	rule__Module__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getModuleAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getModuleAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Roledefn__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Roledefn__Group__0__Impl
	rule__Roledefn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Roledefn__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoledefnAccess().getRoleKeyword_0()); }

	'role' 

{ after(grammarAccess.getRoledefnAccess().getRoleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Roledefn__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Roledefn__Group__1__Impl
	rule__Roledefn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Roledefn__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoledefnAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getRoledefnAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Roledefn__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Roledefn__Group__2__Impl
	rule__Roledefn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Roledefn__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoledefnAccess().getGroup_2()); }
(rule__Roledefn__Group_2__0)?
{ after(grammarAccess.getRoledefnAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Roledefn__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Roledefn__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Roledefn__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoledefnAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getRoledefnAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Roledefn__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Roledefn__Group_2__0__Impl
	rule__Roledefn__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Roledefn__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoledefnAccess().getSimulatingKeyword_2_0()); }

	'simulating' 

{ after(grammarAccess.getRoledefnAccess().getSimulatingKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Roledefn__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Roledefn__Group_2__1__Impl
	rule__Roledefn__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Roledefn__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoledefnAccess().getModuleParserRuleCall_2_1()); }
	ruleModule
{ after(grammarAccess.getRoledefnAccess().getModuleParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Roledefn__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Roledefn__Group_2__2__Impl
	rule__Roledefn__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Roledefn__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoledefnAccess().getProtocolKeyword_2_2()); }

	'protocol' 

{ after(grammarAccess.getRoledefnAccess().getProtocolKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Roledefn__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Roledefn__Group_2__3__Impl
	rule__Roledefn__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Roledefn__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoledefnAccess().getIDTerminalRuleCall_2_3()); }
	RULE_ID
{ after(grammarAccess.getRoledefnAccess().getIDTerminalRuleCall_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Roledefn__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Roledefn__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Roledefn__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoledefnAccess().getGroup_2_4()); }
(rule__Roledefn__Group_2_4__0)?
{ after(grammarAccess.getRoledefnAccess().getGroup_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Roledefn__Group_2_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Roledefn__Group_2_4__0__Impl
	rule__Roledefn__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Roledefn__Group_2_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoledefnAccess().getAsKeyword_2_4_0()); }

	'as' 

{ after(grammarAccess.getRoledefnAccess().getAsKeyword_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Roledefn__Group_2_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Roledefn__Group_2_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Roledefn__Group_2_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoledefnAccess().getIDTerminalRuleCall_2_4_1()); }
	RULE_ID
{ after(grammarAccess.getRoledefnAccess().getIDTerminalRuleCall_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Messagetransfer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group__0__Impl
	rule__Messagetransfer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getMessagetransferAction_0()); }
(

)
{ after(grammarAccess.getMessagetransferAccess().getMessagetransferAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Messagetransfer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group__1__Impl
	rule__Messagetransfer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getMessagetransferAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Messagetransfer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group__2__Impl
	rule__Messagetransfer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getGroup_2()); }
(rule__Messagetransfer__Group_2__0)?
{ after(grammarAccess.getMessagetransferAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Messagetransfer__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group__3__Impl
	rule__Messagetransfer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getFromKeyword_3()); }

	'from' 

{ after(grammarAccess.getMessagetransferAccess().getFromKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Messagetransfer__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group__4__Impl
	rule__Messagetransfer__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getIDTerminalRuleCall_4()); }
	RULE_ID
{ after(grammarAccess.getMessagetransferAccess().getIDTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Messagetransfer__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group__5__Impl
	rule__Messagetransfer__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getToKeyword_5()); }

	'to' 

{ after(grammarAccess.getMessagetransferAccess().getToKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Messagetransfer__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group__6__Impl
	rule__Messagetransfer__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getIDTerminalRuleCall_6()); }
	RULE_ID
{ after(grammarAccess.getMessagetransferAccess().getIDTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Messagetransfer__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group__7__Impl
	rule__Messagetransfer__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getGroup_7()); }
(rule__Messagetransfer__Group_7__0)*
{ after(grammarAccess.getMessagetransferAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Messagetransfer__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getSemicolonKeyword_8()); }

	';' 

{ after(grammarAccess.getMessagetransferAccess().getSemicolonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Messagetransfer__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group_2__0__Impl
	rule__Messagetransfer__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getMessagetransferAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Messagetransfer__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group_2__1__Impl
	rule__Messagetransfer__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getGroup_2_1()); }
(rule__Messagetransfer__Group_2_1__0)?
{ after(grammarAccess.getMessagetransferAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Messagetransfer__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getMessagetransferAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Messagetransfer__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group_2_1__0__Impl
	rule__Messagetransfer__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getParametersAssignment_2_1_0()); }
(rule__Messagetransfer__ParametersAssignment_2_1_0)
{ after(grammarAccess.getMessagetransferAccess().getParametersAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Messagetransfer__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getGroup_2_1_1()); }
(rule__Messagetransfer__Group_2_1_1__0)*
{ after(grammarAccess.getMessagetransferAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Messagetransfer__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group_2_1_1__0__Impl
	rule__Messagetransfer__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getCommaKeyword_2_1_1_0()); }

	',' 

{ after(grammarAccess.getMessagetransferAccess().getCommaKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Messagetransfer__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getParametersAssignment_2_1_1_1()); }
(rule__Messagetransfer__ParametersAssignment_2_1_1_1)
{ after(grammarAccess.getMessagetransferAccess().getParametersAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Messagetransfer__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group_7__0__Impl
	rule__Messagetransfer__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getCommaKeyword_7_0()); }

	',' 

{ after(grammarAccess.getMessagetransferAccess().getCommaKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Messagetransfer__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Messagetransfer__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getIDTerminalRuleCall_7_1()); }
	RULE_ID
{ after(grammarAccess.getMessagetransferAccess().getIDTerminalRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
(rule__Parameter__TypeAssignment_0)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_1()); }
(rule__Parameter__Group_1__0)?
{ after(grammarAccess.getParameterAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_1__0__Impl
	rule__Parameter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getParameterAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getValueAssignment_1_1()); }
(rule__Parameter__ValueAssignment_1_1)
{ after(grammarAccess.getParameterAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Trace__RolesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceAccess().getRolesRoledefnParserRuleCall_2_0()); }
	ruleRoledefn{ after(grammarAccess.getTraceAccess().getRolesRoledefnParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trace__StepsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceAccess().getStepsStepdefnParserRuleCall_3_0()); }
	ruleStepdefn{ after(grammarAccess.getTraceAccess().getStepsStepdefnParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__ParametersAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getParametersParameterParserRuleCall_2_1_0_0()); }
	ruleParameter{ after(grammarAccess.getMessagetransferAccess().getParametersParameterParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Messagetransfer__ParametersAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessagetransferAccess().getParametersParameterParserRuleCall_2_1_1_1_0()); }
	ruleParameter{ after(grammarAccess.getMessagetransferAccess().getParametersParameterParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getParameterAccess().getTypeSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getParameterAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


