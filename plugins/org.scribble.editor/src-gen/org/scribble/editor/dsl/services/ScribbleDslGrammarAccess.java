/*
* generated by Xtext
*/
package org.scribble.editor.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ScribbleDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Module");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameModuleNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImportsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cImportsImportDeclParserRuleCall_3_0 = (RuleCall)cImportsAssignment_3.eContents().get(0);
		private final Assignment cTypesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypesPayloadTypeDeclParserRuleCall_4_0 = (RuleCall)cTypesAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cGlobalsAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cGlobalsGlobalProtocolDeclParserRuleCall_5_0_0 = (RuleCall)cGlobalsAssignment_5_0.eContents().get(0);
		private final Assignment cLocalsAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cLocalsLocalProtocolDeclParserRuleCall_5_1_0 = (RuleCall)cLocalsAssignment_5_1.eContents().get(0);
		
		//Module:
		//	"module" name=ModuleName ";" imports+=ImportDecl* types+=PayloadTypeDecl* (globals+=GlobalProtocolDecl |
		//	locals+=LocalProtocolDecl)*;
		public ParserRule getRule() { return rule; }

		//"module" name=ModuleName ";" imports+=ImportDecl* types+=PayloadTypeDecl* (globals+=GlobalProtocolDecl |
		//locals+=LocalProtocolDecl)*
		public Group getGroup() { return cGroup; }

		//"module"
		public Keyword getModuleKeyword_0() { return cModuleKeyword_0; }

		//name=ModuleName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ModuleName
		public RuleCall getNameModuleNameParserRuleCall_1_0() { return cNameModuleNameParserRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }

		//imports+=ImportDecl*
		public Assignment getImportsAssignment_3() { return cImportsAssignment_3; }

		//ImportDecl
		public RuleCall getImportsImportDeclParserRuleCall_3_0() { return cImportsImportDeclParserRuleCall_3_0; }

		//types+=PayloadTypeDecl*
		public Assignment getTypesAssignment_4() { return cTypesAssignment_4; }

		//PayloadTypeDecl
		public RuleCall getTypesPayloadTypeDeclParserRuleCall_4_0() { return cTypesPayloadTypeDeclParserRuleCall_4_0; }

		//(globals+=GlobalProtocolDecl | locals+=LocalProtocolDecl)*
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//globals+=GlobalProtocolDecl
		public Assignment getGlobalsAssignment_5_0() { return cGlobalsAssignment_5_0; }

		//GlobalProtocolDecl
		public RuleCall getGlobalsGlobalProtocolDeclParserRuleCall_5_0_0() { return cGlobalsGlobalProtocolDeclParserRuleCall_5_0_0; }

		//locals+=LocalProtocolDecl
		public Assignment getLocalsAssignment_5_1() { return cLocalsAssignment_5_1; }

		//LocalProtocolDecl
		public RuleCall getLocalsLocalProtocolDeclParserRuleCall_5_1_0() { return cLocalsLocalProtocolDeclParserRuleCall_5_1_0; }
	}

	public class ModuleNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModuleName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//ModuleName:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class ImportDeclElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImportDecl");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cImportModuleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cImportMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ImportDecl:
		//	ImportModule | ImportMember;
		public ParserRule getRule() { return rule; }

		//ImportModule | ImportMember
		public Alternatives getAlternatives() { return cAlternatives; }

		//ImportModule
		public RuleCall getImportModuleParserRuleCall_0() { return cImportModuleParserRuleCall_0; }

		//ImportMember
		public RuleCall getImportMemberParserRuleCall_1() { return cImportMemberParserRuleCall_1; }
	}

	public class ImportModuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImportModule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameModuleNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAliasAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAliasIDTerminalRuleCall_2_1_0 = (RuleCall)cAliasAssignment_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ImportModule:
		//	"import" name=ModuleName ("as" alias=ID)? ";";
		public ParserRule getRule() { return rule; }

		//"import" name=ModuleName ("as" alias=ID)? ";"
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//name=ModuleName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ModuleName
		public RuleCall getNameModuleNameParserRuleCall_1_0() { return cNameModuleNameParserRuleCall_1_0; }

		//("as" alias=ID)?
		public Group getGroup_2() { return cGroup_2; }

		//"as"
		public Keyword getAsKeyword_2_0() { return cAsKeyword_2_0; }

		//alias=ID
		public Assignment getAliasAssignment_2_1() { return cAliasAssignment_2_1; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_2_1_0() { return cAliasIDTerminalRuleCall_2_1_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class ImportMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImportMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFromKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameModuleNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cImportKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMemberAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMemberIDTerminalRuleCall_3_0 = (RuleCall)cMemberAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAliasAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAliasIDTerminalRuleCall_4_1_0 = (RuleCall)cAliasAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ImportMember:
		//	"from" name=ModuleName "import" member=ID ("as" alias=ID)? ";";
		public ParserRule getRule() { return rule; }

		//"from" name=ModuleName "import" member=ID ("as" alias=ID)? ";"
		public Group getGroup() { return cGroup; }

		//"from"
		public Keyword getFromKeyword_0() { return cFromKeyword_0; }

		//name=ModuleName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ModuleName
		public RuleCall getNameModuleNameParserRuleCall_1_0() { return cNameModuleNameParserRuleCall_1_0; }

		//"import"
		public Keyword getImportKeyword_2() { return cImportKeyword_2; }

		//member=ID
		public Assignment getMemberAssignment_3() { return cMemberAssignment_3; }

		//ID
		public RuleCall getMemberIDTerminalRuleCall_3_0() { return cMemberIDTerminalRuleCall_3_0; }

		//("as" alias=ID)?
		public Group getGroup_4() { return cGroup_4; }

		//"as"
		public Keyword getAsKeyword_4_0() { return cAsKeyword_4_0; }

		//alias=ID
		public Assignment getAliasAssignment_4_1() { return cAliasAssignment_4_1; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_4_1_0() { return cAliasIDTerminalRuleCall_4_1_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class PayloadTypeDeclElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PayloadTypeDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLessThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSchemaAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSchemaIDTerminalRuleCall_2_0 = (RuleCall)cSchemaAssignment_2.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeSTRINGTerminalRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Keyword cFromKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cLocationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLocationSTRINGTerminalRuleCall_6_0 = (RuleCall)cLocationAssignment_6.eContents().get(0);
		private final Keyword cAsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cAliasAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cAliasIDTerminalRuleCall_8_0 = (RuleCall)cAliasAssignment_8.eContents().get(0);
		private final Keyword cSemicolonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//PayloadTypeDecl:
		//	"type" "<" schema=ID ">" type=STRING "from" location=STRING "as" alias=ID ";";
		public ParserRule getRule() { return rule; }

		//"type" "<" schema=ID ">" type=STRING "from" location=STRING "as" alias=ID ";"
		public Group getGroup() { return cGroup; }

		//"type"
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }

		//"<"
		public Keyword getLessThanSignKeyword_1() { return cLessThanSignKeyword_1; }

		//schema=ID
		public Assignment getSchemaAssignment_2() { return cSchemaAssignment_2; }

		//ID
		public RuleCall getSchemaIDTerminalRuleCall_2_0() { return cSchemaIDTerminalRuleCall_2_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_3() { return cGreaterThanSignKeyword_3; }

		//type=STRING
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_4_0() { return cTypeSTRINGTerminalRuleCall_4_0; }

		//"from"
		public Keyword getFromKeyword_5() { return cFromKeyword_5; }

		//location=STRING
		public Assignment getLocationAssignment_6() { return cLocationAssignment_6; }

		//STRING
		public RuleCall getLocationSTRINGTerminalRuleCall_6_0() { return cLocationSTRINGTerminalRuleCall_6_0; }

		//"as"
		public Keyword getAsKeyword_7() { return cAsKeyword_7; }

		//alias=ID
		public Assignment getAliasAssignment_8() { return cAliasAssignment_8; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_8_0() { return cAliasIDTerminalRuleCall_8_0; }

		//";"
		public Keyword getSemicolonKeyword_9() { return cSemicolonKeyword_9; }
	}

	public class MessageSignatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MessageSignature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMessageSignatureAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorIDTerminalRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cTypesAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cTypesPayloadElementParserRuleCall_3_0_0 = (RuleCall)cTypesAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cTypesAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cTypesPayloadElementParserRuleCall_3_1_1_0 = (RuleCall)cTypesAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		/// **
		// * Section 3.5 Message Signatures
		// * / MessageSignature:
		//	{MessageSignature} operator=ID? "(" (types+=PayloadElement ("," types+=PayloadElement)*)? ")";
		public ParserRule getRule() { return rule; }

		//{MessageSignature} operator=ID? "(" (types+=PayloadElement ("," types+=PayloadElement)*)? ")"
		public Group getGroup() { return cGroup; }

		//{MessageSignature}
		public Action getMessageSignatureAction_0() { return cMessageSignatureAction_0; }

		//operator=ID?
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }

		//ID
		public RuleCall getOperatorIDTerminalRuleCall_1_0() { return cOperatorIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(types+=PayloadElement ("," types+=PayloadElement)*)?
		public Group getGroup_3() { return cGroup_3; }

		//types+=PayloadElement
		public Assignment getTypesAssignment_3_0() { return cTypesAssignment_3_0; }

		//PayloadElement
		public RuleCall getTypesPayloadElementParserRuleCall_3_0_0() { return cTypesPayloadElementParserRuleCall_3_0_0; }

		//("," types+=PayloadElement)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//types+=PayloadElement
		public Assignment getTypesAssignment_3_1_1() { return cTypesAssignment_3_1_1; }

		//PayloadElement
		public RuleCall getTypesPayloadElementParserRuleCall_3_1_1_0() { return cTypesPayloadElementParserRuleCall_3_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class PayloadElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PayloadElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeIDTerminalRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//PayloadElement:
		//	(name=ID ":")? type=ID;
		public ParserRule getRule() { return rule; }

		//(name=ID ":")? type=ID
		public Group getGroup() { return cGroup; }

		//(name=ID ":")?
		public Group getGroup_0() { return cGroup_0; }

		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }

		//":"
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }

		//type=ID
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//ID
		public RuleCall getTypeIDTerminalRuleCall_1_0() { return cTypeIDTerminalRuleCall_1_0; }
	}

	public class GlobalProtocolDeclElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GlobalProtocolDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGlobalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cProtocolKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLessThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cParametersAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cParametersParameterDeclParserRuleCall_3_1_0 = (RuleCall)cParametersAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cParametersAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cParametersParameterDeclParserRuleCall_3_2_1_0 = (RuleCall)cParametersAssignment_3_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRolesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRolesRoleDeclParserRuleCall_5_0 = (RuleCall)cRolesAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRolesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRolesRoleDeclParserRuleCall_6_1_0 = (RuleCall)cRolesAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final Assignment cBlockAssignment_8_0 = (Assignment)cAlternatives_8.eContents().get(0);
		private final RuleCall cBlockGlobalProtocolBlockParserRuleCall_8_0_0 = (RuleCall)cBlockAssignment_8_0.eContents().get(0);
		private final Group cGroup_8_1 = (Group)cAlternatives_8.eContents().get(1);
		private final Keyword cInstantiatesKeyword_8_1_0 = (Keyword)cGroup_8_1.eContents().get(0);
		private final Assignment cInstantiatesAssignment_8_1_1 = (Assignment)cGroup_8_1.eContents().get(1);
		private final RuleCall cInstantiatesIDTerminalRuleCall_8_1_1_0 = (RuleCall)cInstantiatesAssignment_8_1_1.eContents().get(0);
		private final Group cGroup_8_1_2 = (Group)cGroup_8_1.eContents().get(2);
		private final Keyword cLessThanSignKeyword_8_1_2_0 = (Keyword)cGroup_8_1_2.eContents().get(0);
		private final Assignment cArgumentsAssignment_8_1_2_1 = (Assignment)cGroup_8_1_2.eContents().get(1);
		private final RuleCall cArgumentsArgumentParserRuleCall_8_1_2_1_0 = (RuleCall)cArgumentsAssignment_8_1_2_1.eContents().get(0);
		private final Group cGroup_8_1_2_2 = (Group)cGroup_8_1_2.eContents().get(2);
		private final Keyword cCommaKeyword_8_1_2_2_0 = (Keyword)cGroup_8_1_2_2.eContents().get(0);
		private final Assignment cArgumentsAssignment_8_1_2_2_1 = (Assignment)cGroup_8_1_2_2.eContents().get(1);
		private final RuleCall cArgumentsArgumentParserRuleCall_8_1_2_2_1_0 = (RuleCall)cArgumentsAssignment_8_1_2_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_8_1_2_3 = (Keyword)cGroup_8_1_2.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_8_1_3 = (Keyword)cGroup_8_1.eContents().get(3);
		private final Assignment cRoleInstantiationsAssignment_8_1_4 = (Assignment)cGroup_8_1.eContents().get(4);
		private final RuleCall cRoleInstantiationsRoleInstantiationParserRuleCall_8_1_4_0 = (RuleCall)cRoleInstantiationsAssignment_8_1_4.eContents().get(0);
		private final Group cGroup_8_1_5 = (Group)cGroup_8_1.eContents().get(5);
		private final Keyword cCommaKeyword_8_1_5_0 = (Keyword)cGroup_8_1_5.eContents().get(0);
		private final Assignment cRoleInstantiationsAssignment_8_1_5_1 = (Assignment)cGroup_8_1_5.eContents().get(1);
		private final RuleCall cRoleInstantiationsRoleInstantiationParserRuleCall_8_1_5_1_0 = (RuleCall)cRoleInstantiationsAssignment_8_1_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8_1_6 = (Keyword)cGroup_8_1.eContents().get(6);
		private final Keyword cSemicolonKeyword_8_1_7 = (Keyword)cGroup_8_1.eContents().get(7);
		
		//GlobalProtocolDecl:
		//	"global" "protocol" name=ID ("<" parameters+=ParameterDecl ("," parameters+=ParameterDecl)* ">")? "(" roles+=RoleDecl
		//	("," roles+=RoleDecl)* ")" (block=GlobalProtocolBlock | "instantiates" instantiates=ID ("<" arguments+=Argument (","
		//	arguments+=Argument)* ">")? "(" roleInstantiations+=RoleInstantiation ("," roleInstantiations+=RoleInstantiation)* ")"
		//	";");
		public ParserRule getRule() { return rule; }

		//"global" "protocol" name=ID ("<" parameters+=ParameterDecl ("," parameters+=ParameterDecl)* ">")? "(" roles+=RoleDecl
		//("," roles+=RoleDecl)* ")" (block=GlobalProtocolBlock | "instantiates" instantiates=ID ("<" arguments+=Argument (","
		//arguments+=Argument)* ">")? "(" roleInstantiations+=RoleInstantiation ("," roleInstantiations+=RoleInstantiation)* ")"
		//";")
		public Group getGroup() { return cGroup; }

		//"global"
		public Keyword getGlobalKeyword_0() { return cGlobalKeyword_0; }

		//"protocol"
		public Keyword getProtocolKeyword_1() { return cProtocolKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("<" parameters+=ParameterDecl ("," parameters+=ParameterDecl)* ">")?
		public Group getGroup_3() { return cGroup_3; }

		//"<"
		public Keyword getLessThanSignKeyword_3_0() { return cLessThanSignKeyword_3_0; }

		//parameters+=ParameterDecl
		public Assignment getParametersAssignment_3_1() { return cParametersAssignment_3_1; }

		//ParameterDecl
		public RuleCall getParametersParameterDeclParserRuleCall_3_1_0() { return cParametersParameterDeclParserRuleCall_3_1_0; }

		//("," parameters+=ParameterDecl)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//parameters+=ParameterDecl
		public Assignment getParametersAssignment_3_2_1() { return cParametersAssignment_3_2_1; }

		//ParameterDecl
		public RuleCall getParametersParameterDeclParserRuleCall_3_2_1_0() { return cParametersParameterDeclParserRuleCall_3_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_3_3() { return cGreaterThanSignKeyword_3_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }

		//roles+=RoleDecl
		public Assignment getRolesAssignment_5() { return cRolesAssignment_5; }

		//RoleDecl
		public RuleCall getRolesRoleDeclParserRuleCall_5_0() { return cRolesRoleDeclParserRuleCall_5_0; }

		//("," roles+=RoleDecl)*
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//roles+=RoleDecl
		public Assignment getRolesAssignment_6_1() { return cRolesAssignment_6_1; }

		//RoleDecl
		public RuleCall getRolesRoleDeclParserRuleCall_6_1_0() { return cRolesRoleDeclParserRuleCall_6_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }

		//block=GlobalProtocolBlock | "instantiates" instantiates=ID ("<" arguments+=Argument ("," arguments+=Argument)* ">")? "("
		//roleInstantiations+=RoleInstantiation ("," roleInstantiations+=RoleInstantiation)* ")" ";"
		public Alternatives getAlternatives_8() { return cAlternatives_8; }

		//block=GlobalProtocolBlock
		public Assignment getBlockAssignment_8_0() { return cBlockAssignment_8_0; }

		//GlobalProtocolBlock
		public RuleCall getBlockGlobalProtocolBlockParserRuleCall_8_0_0() { return cBlockGlobalProtocolBlockParserRuleCall_8_0_0; }

		//"instantiates" instantiates=ID ("<" arguments+=Argument ("," arguments+=Argument)* ">")? "("
		//roleInstantiations+=RoleInstantiation ("," roleInstantiations+=RoleInstantiation)* ")" ";"
		public Group getGroup_8_1() { return cGroup_8_1; }

		//"instantiates"
		public Keyword getInstantiatesKeyword_8_1_0() { return cInstantiatesKeyword_8_1_0; }

		//instantiates=ID
		public Assignment getInstantiatesAssignment_8_1_1() { return cInstantiatesAssignment_8_1_1; }

		//ID
		public RuleCall getInstantiatesIDTerminalRuleCall_8_1_1_0() { return cInstantiatesIDTerminalRuleCall_8_1_1_0; }

		//("<" arguments+=Argument ("," arguments+=Argument)* ">")?
		public Group getGroup_8_1_2() { return cGroup_8_1_2; }

		//"<"
		public Keyword getLessThanSignKeyword_8_1_2_0() { return cLessThanSignKeyword_8_1_2_0; }

		//arguments+=Argument
		public Assignment getArgumentsAssignment_8_1_2_1() { return cArgumentsAssignment_8_1_2_1; }

		//Argument
		public RuleCall getArgumentsArgumentParserRuleCall_8_1_2_1_0() { return cArgumentsArgumentParserRuleCall_8_1_2_1_0; }

		//("," arguments+=Argument)*
		public Group getGroup_8_1_2_2() { return cGroup_8_1_2_2; }

		//","
		public Keyword getCommaKeyword_8_1_2_2_0() { return cCommaKeyword_8_1_2_2_0; }

		//arguments+=Argument
		public Assignment getArgumentsAssignment_8_1_2_2_1() { return cArgumentsAssignment_8_1_2_2_1; }

		//Argument
		public RuleCall getArgumentsArgumentParserRuleCall_8_1_2_2_1_0() { return cArgumentsArgumentParserRuleCall_8_1_2_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_8_1_2_3() { return cGreaterThanSignKeyword_8_1_2_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_8_1_3() { return cLeftParenthesisKeyword_8_1_3; }

		//roleInstantiations+=RoleInstantiation
		public Assignment getRoleInstantiationsAssignment_8_1_4() { return cRoleInstantiationsAssignment_8_1_4; }

		//RoleInstantiation
		public RuleCall getRoleInstantiationsRoleInstantiationParserRuleCall_8_1_4_0() { return cRoleInstantiationsRoleInstantiationParserRuleCall_8_1_4_0; }

		//("," roleInstantiations+=RoleInstantiation)*
		public Group getGroup_8_1_5() { return cGroup_8_1_5; }

		//","
		public Keyword getCommaKeyword_8_1_5_0() { return cCommaKeyword_8_1_5_0; }

		//roleInstantiations+=RoleInstantiation
		public Assignment getRoleInstantiationsAssignment_8_1_5_1() { return cRoleInstantiationsAssignment_8_1_5_1; }

		//RoleInstantiation
		public RuleCall getRoleInstantiationsRoleInstantiationParserRuleCall_8_1_5_1_0() { return cRoleInstantiationsRoleInstantiationParserRuleCall_8_1_5_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_8_1_6() { return cRightParenthesisKeyword_8_1_6; }

		//";"
		public Keyword getSemicolonKeyword_8_1_7() { return cSemicolonKeyword_8_1_7; }
	}

	public class RoleDeclElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RoleDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRoleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAliasAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAliasIDTerminalRuleCall_2_1_0 = (RuleCall)cAliasAssignment_2_1.eContents().get(0);
		
		//RoleDecl:
		//	"role" name=ID ("as" alias=ID)?;
		public ParserRule getRule() { return rule; }

		//"role" name=ID ("as" alias=ID)?
		public Group getGroup() { return cGroup; }

		//"role"
		public Keyword getRoleKeyword_0() { return cRoleKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("as" alias=ID)?
		public Group getGroup_2() { return cGroup_2; }

		//"as"
		public Keyword getAsKeyword_2_0() { return cAsKeyword_2_0; }

		//alias=ID
		public Assignment getAliasAssignment_2_1() { return cAliasAssignment_2_1; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_2_1_0() { return cAliasIDTerminalRuleCall_2_1_0; }
	}

	public class ParameterDeclElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParameterDecl");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cTypeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cAsKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Assignment cAliasAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cAliasIDTerminalRuleCall_0_2_1_0 = (RuleCall)cAliasAssignment_0_2_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cSigKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cAsKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cAliasAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cAliasIDTerminalRuleCall_1_2_1_0 = (RuleCall)cAliasAssignment_1_2_1.eContents().get(0);
		
		//ParameterDecl:
		//	"type" name=ID ("as" alias=ID)? | "sig" name=ID ("as" alias=ID)?;
		public ParserRule getRule() { return rule; }

		//"type" name=ID ("as" alias=ID)? | "sig" name=ID ("as" alias=ID)?
		public Alternatives getAlternatives() { return cAlternatives; }

		//"type" name=ID ("as" alias=ID)?
		public Group getGroup_0() { return cGroup_0; }

		//"type"
		public Keyword getTypeKeyword_0_0() { return cTypeKeyword_0_0; }

		//name=ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }

		//("as" alias=ID)?
		public Group getGroup_0_2() { return cGroup_0_2; }

		//"as"
		public Keyword getAsKeyword_0_2_0() { return cAsKeyword_0_2_0; }

		//alias=ID
		public Assignment getAliasAssignment_0_2_1() { return cAliasAssignment_0_2_1; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_0_2_1_0() { return cAliasIDTerminalRuleCall_0_2_1_0; }

		//"sig" name=ID ("as" alias=ID)?
		public Group getGroup_1() { return cGroup_1; }

		//"sig"
		public Keyword getSigKeyword_1_0() { return cSigKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }

		//("as" alias=ID)?
		public Group getGroup_1_2() { return cGroup_1_2; }

		//"as"
		public Keyword getAsKeyword_1_2_0() { return cAsKeyword_1_2_0; }

		//alias=ID
		public Assignment getAliasAssignment_1_2_1() { return cAliasAssignment_1_2_1; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_1_2_1_0() { return cAliasIDTerminalRuleCall_1_2_1_0; }
	}

	public class RoleInstantiationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RoleInstantiation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cAliasAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAliasIDTerminalRuleCall_1_1_0 = (RuleCall)cAliasAssignment_1_1.eContents().get(0);
		
		//RoleInstantiation:
		//	name=ID ("as" alias=ID)?;
		public ParserRule getRule() { return rule; }

		//name=ID ("as" alias=ID)?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//("as" alias=ID)?
		public Group getGroup_1() { return cGroup_1; }

		//"as"
		public Keyword getAsKeyword_1_0() { return cAsKeyword_1_0; }

		//alias=ID
		public Assignment getAliasAssignment_1_1() { return cAliasAssignment_1_1; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_1_1_0() { return cAliasIDTerminalRuleCall_1_1_0; }
	}

	public class ArgumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Argument");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cSignatureAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cSignatureMessageSignatureParserRuleCall_0_0_0 = (RuleCall)cSignatureAssignment_0_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cAsKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Assignment cAliasAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cAliasIDTerminalRuleCall_0_1_1_0 = (RuleCall)cAliasAssignment_0_1_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_1_0_0 = (RuleCall)cNameAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cAsKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cAliasAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cAliasIDTerminalRuleCall_1_1_1_0 = (RuleCall)cAliasAssignment_1_1_1.eContents().get(0);
		
		//Argument:
		//	signature=MessageSignature ("as" alias=ID)? | name=ID ("as" alias=ID)?;
		public ParserRule getRule() { return rule; }

		//signature=MessageSignature ("as" alias=ID)? | name=ID ("as" alias=ID)?
		public Alternatives getAlternatives() { return cAlternatives; }

		//signature=MessageSignature ("as" alias=ID)?
		public Group getGroup_0() { return cGroup_0; }

		//signature=MessageSignature
		public Assignment getSignatureAssignment_0_0() { return cSignatureAssignment_0_0; }

		//MessageSignature
		public RuleCall getSignatureMessageSignatureParserRuleCall_0_0_0() { return cSignatureMessageSignatureParserRuleCall_0_0_0; }

		//("as" alias=ID)?
		public Group getGroup_0_1() { return cGroup_0_1; }

		//"as"
		public Keyword getAsKeyword_0_1_0() { return cAsKeyword_0_1_0; }

		//alias=ID
		public Assignment getAliasAssignment_0_1_1() { return cAliasAssignment_0_1_1; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_0_1_1_0() { return cAliasIDTerminalRuleCall_0_1_1_0; }

		//name=ID ("as" alias=ID)?
		public Group getGroup_1() { return cGroup_1; }

		//name=ID
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0_0() { return cNameIDTerminalRuleCall_1_0_0; }

		//("as" alias=ID)?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"as"
		public Keyword getAsKeyword_1_1_0() { return cAsKeyword_1_1_0; }

		//alias=ID
		public Assignment getAliasAssignment_1_1_1() { return cAliasAssignment_1_1_1; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_1_1_1_0() { return cAliasIDTerminalRuleCall_1_1_1_0; }
	}

	public class GlobalProtocolBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GlobalProtocolBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGlobalProtocolBlockAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActivitiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActivitiesGlobalInteractionParserRuleCall_2_0 = (RuleCall)cActivitiesAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		/// **
		// * Section 3.7.3 Global Interaction Sequences and Blocks
		// * / GlobalProtocolBlock:
		//	{GlobalProtocolBlock} "{" activities+=GlobalInteraction* "}";
		public ParserRule getRule() { return rule; }

		//{GlobalProtocolBlock} "{" activities+=GlobalInteraction* "}"
		public Group getGroup() { return cGroup; }

		//{GlobalProtocolBlock}
		public Action getGlobalProtocolBlockAction_0() { return cGlobalProtocolBlockAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//activities+=GlobalInteraction*
		public Assignment getActivitiesAssignment_2() { return cActivitiesAssignment_2; }

		//GlobalInteraction
		public RuleCall getActivitiesGlobalInteractionParserRuleCall_2_0() { return cActivitiesGlobalInteractionParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class GlobalInteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GlobalInteraction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGlobalMessageTransferParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGlobalChoiceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGlobalRecursionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cGlobalContinueParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cGlobalParallelParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cGlobalInterruptibleParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cGlobalDoParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		/// *|
		//	globalspawn* / GlobalInteraction:
		//	GlobalMessageTransfer | GlobalChoice | GlobalRecursion | GlobalContinue | GlobalParallel | GlobalInterruptible |
		//	GlobalDo;
		public ParserRule getRule() { return rule; }

		//GlobalMessageTransfer | GlobalChoice | GlobalRecursion | GlobalContinue | GlobalParallel | GlobalInterruptible |
		//GlobalDo
		public Alternatives getAlternatives() { return cAlternatives; }

		//GlobalMessageTransfer
		public RuleCall getGlobalMessageTransferParserRuleCall_0() { return cGlobalMessageTransferParserRuleCall_0; }

		//GlobalChoice
		public RuleCall getGlobalChoiceParserRuleCall_1() { return cGlobalChoiceParserRuleCall_1; }

		//GlobalRecursion
		public RuleCall getGlobalRecursionParserRuleCall_2() { return cGlobalRecursionParserRuleCall_2; }

		//GlobalContinue
		public RuleCall getGlobalContinueParserRuleCall_3() { return cGlobalContinueParserRuleCall_3; }

		//GlobalParallel
		public RuleCall getGlobalParallelParserRuleCall_4() { return cGlobalParallelParserRuleCall_4; }

		//GlobalInterruptible
		public RuleCall getGlobalInterruptibleParserRuleCall_5() { return cGlobalInterruptibleParserRuleCall_5; }

		//GlobalDo
		public RuleCall getGlobalDoParserRuleCall_6() { return cGlobalDoParserRuleCall_6; }
	}

	public class GlobalMessageTransferElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GlobalMessageTransfer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMessageAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMessageMessageParserRuleCall_0_0 = (RuleCall)cMessageAssignment_0.eContents().get(0);
		private final Keyword cFromKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFromRoleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFromRoleIDTerminalRuleCall_2_0 = (RuleCall)cFromRoleAssignment_2.eContents().get(0);
		private final Keyword cToKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cToRolesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cToRolesIDTerminalRuleCall_4_0 = (RuleCall)cToRolesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cToRolesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cToRolesIDTerminalRuleCall_5_1_0 = (RuleCall)cToRolesAssignment_5_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		/// **
		// * Section 3.7.4 Global Message Transfer
		// * / GlobalMessageTransfer:
		//	message=Message "from" fromRole=ID "to" toRoles+=ID ("," toRoles+=ID)* ";";
		public ParserRule getRule() { return rule; }

		//message=Message "from" fromRole=ID "to" toRoles+=ID ("," toRoles+=ID)* ";"
		public Group getGroup() { return cGroup; }

		//message=Message
		public Assignment getMessageAssignment_0() { return cMessageAssignment_0; }

		//Message
		public RuleCall getMessageMessageParserRuleCall_0_0() { return cMessageMessageParserRuleCall_0_0; }

		//"from"
		public Keyword getFromKeyword_1() { return cFromKeyword_1; }

		//fromRole=ID
		public Assignment getFromRoleAssignment_2() { return cFromRoleAssignment_2; }

		//ID
		public RuleCall getFromRoleIDTerminalRuleCall_2_0() { return cFromRoleIDTerminalRuleCall_2_0; }

		//"to"
		public Keyword getToKeyword_3() { return cToKeyword_3; }

		//toRoles+=ID
		public Assignment getToRolesAssignment_4() { return cToRolesAssignment_4; }

		//ID
		public RuleCall getToRolesIDTerminalRuleCall_4_0() { return cToRolesIDTerminalRuleCall_4_0; }

		//("," toRoles+=ID)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//toRoles+=ID
		public Assignment getToRolesAssignment_5_1() { return cToRolesAssignment_5_1; }

		//ID
		public RuleCall getToRolesIDTerminalRuleCall_5_1_0() { return cToRolesIDTerminalRuleCall_5_1_0; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Message");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cSignatureAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cSignatureMessageSignatureParserRuleCall_0_0 = (RuleCall)cSignatureAssignment_0.eContents().get(0);
		private final Assignment cParameterAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cParameterIDTerminalRuleCall_1_0 = (RuleCall)cParameterAssignment_1.eContents().get(0);
		
		//Message:
		//	signature=MessageSignature | parameter=ID;
		public ParserRule getRule() { return rule; }

		//signature=MessageSignature | parameter=ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//signature=MessageSignature
		public Assignment getSignatureAssignment_0() { return cSignatureAssignment_0; }

		//MessageSignature
		public RuleCall getSignatureMessageSignatureParserRuleCall_0_0() { return cSignatureMessageSignatureParserRuleCall_0_0; }

		//parameter=ID
		public Assignment getParameterAssignment_1() { return cParameterAssignment_1; }

		//ID
		public RuleCall getParameterIDTerminalRuleCall_1_0() { return cParameterIDTerminalRuleCall_1_0; }
	}

	public class GlobalChoiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GlobalChoice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChoiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRoleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRoleIDTerminalRuleCall_2_0 = (RuleCall)cRoleAssignment_2.eContents().get(0);
		private final Assignment cBlocksAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBlocksGlobalProtocolBlockParserRuleCall_3_0 = (RuleCall)cBlocksAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOrKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBlocksAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBlocksGlobalProtocolBlockParserRuleCall_4_1_0 = (RuleCall)cBlocksAssignment_4_1.eContents().get(0);
		
		/// **
		// * Section 3.7.5 Global Choice
		// * / GlobalChoice:
		//	"choice" "at" role=ID blocks+=GlobalProtocolBlock ("or" blocks+=GlobalProtocolBlock)*;
		public ParserRule getRule() { return rule; }

		//"choice" "at" role=ID blocks+=GlobalProtocolBlock ("or" blocks+=GlobalProtocolBlock)*
		public Group getGroup() { return cGroup; }

		//"choice"
		public Keyword getChoiceKeyword_0() { return cChoiceKeyword_0; }

		//"at"
		public Keyword getAtKeyword_1() { return cAtKeyword_1; }

		//role=ID
		public Assignment getRoleAssignment_2() { return cRoleAssignment_2; }

		//ID
		public RuleCall getRoleIDTerminalRuleCall_2_0() { return cRoleIDTerminalRuleCall_2_0; }

		//blocks+=GlobalProtocolBlock
		public Assignment getBlocksAssignment_3() { return cBlocksAssignment_3; }

		//GlobalProtocolBlock
		public RuleCall getBlocksGlobalProtocolBlockParserRuleCall_3_0() { return cBlocksGlobalProtocolBlockParserRuleCall_3_0; }

		//("or" blocks+=GlobalProtocolBlock)*
		public Group getGroup_4() { return cGroup_4; }

		//"or"
		public Keyword getOrKeyword_4_0() { return cOrKeyword_4_0; }

		//blocks+=GlobalProtocolBlock
		public Assignment getBlocksAssignment_4_1() { return cBlocksAssignment_4_1; }

		//GlobalProtocolBlock
		public RuleCall getBlocksGlobalProtocolBlockParserRuleCall_4_1_0() { return cBlocksGlobalProtocolBlockParserRuleCall_4_1_0; }
	}

	public class GlobalRecursionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GlobalRecursion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRecKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLabelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLabelIDTerminalRuleCall_1_0 = (RuleCall)cLabelAssignment_1.eContents().get(0);
		private final Assignment cBlockAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBlockGlobalProtocolBlockParserRuleCall_2_0 = (RuleCall)cBlockAssignment_2.eContents().get(0);
		
		/// **
		// * Section 3.7.6 Global Recursion
		// * / GlobalRecursion:
		//	"rec" label=ID block=GlobalProtocolBlock;
		public ParserRule getRule() { return rule; }

		//"rec" label=ID block=GlobalProtocolBlock
		public Group getGroup() { return cGroup; }

		//"rec"
		public Keyword getRecKeyword_0() { return cRecKeyword_0; }

		//label=ID
		public Assignment getLabelAssignment_1() { return cLabelAssignment_1; }

		//ID
		public RuleCall getLabelIDTerminalRuleCall_1_0() { return cLabelIDTerminalRuleCall_1_0; }

		//block=GlobalProtocolBlock
		public Assignment getBlockAssignment_2() { return cBlockAssignment_2; }

		//GlobalProtocolBlock
		public RuleCall getBlockGlobalProtocolBlockParserRuleCall_2_0() { return cBlockGlobalProtocolBlockParserRuleCall_2_0; }
	}

	public class GlobalContinueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GlobalContinue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContinueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLabelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLabelIDTerminalRuleCall_1_0 = (RuleCall)cLabelAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//GlobalContinue:
		//	"continue" label=ID ";";
		public ParserRule getRule() { return rule; }

		//"continue" label=ID ";"
		public Group getGroup() { return cGroup; }

		//"continue"
		public Keyword getContinueKeyword_0() { return cContinueKeyword_0; }

		//label=ID
		public Assignment getLabelAssignment_1() { return cLabelAssignment_1; }

		//ID
		public RuleCall getLabelIDTerminalRuleCall_1_0() { return cLabelIDTerminalRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class GlobalParallelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GlobalParallel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cBlocksAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBlocksGlobalProtocolBlockParserRuleCall_1_0 = (RuleCall)cBlocksAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAndKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cBlocksAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cBlocksGlobalProtocolBlockParserRuleCall_2_1_0 = (RuleCall)cBlocksAssignment_2_1.eContents().get(0);
		
		/// **
		// * Section 3.7.7 Global Parallel
		// * / GlobalParallel:
		//	"par" blocks+=GlobalProtocolBlock ("and" blocks+=GlobalProtocolBlock)*;
		public ParserRule getRule() { return rule; }

		//"par" blocks+=GlobalProtocolBlock ("and" blocks+=GlobalProtocolBlock)*
		public Group getGroup() { return cGroup; }

		//"par"
		public Keyword getParKeyword_0() { return cParKeyword_0; }

		//blocks+=GlobalProtocolBlock
		public Assignment getBlocksAssignment_1() { return cBlocksAssignment_1; }

		//GlobalProtocolBlock
		public RuleCall getBlocksGlobalProtocolBlockParserRuleCall_1_0() { return cBlocksGlobalProtocolBlockParserRuleCall_1_0; }

		//("and" blocks+=GlobalProtocolBlock)*
		public Group getGroup_2() { return cGroup_2; }

		//"and"
		public Keyword getAndKeyword_2_0() { return cAndKeyword_2_0; }

		//blocks+=GlobalProtocolBlock
		public Assignment getBlocksAssignment_2_1() { return cBlocksAssignment_2_1; }

		//GlobalProtocolBlock
		public RuleCall getBlocksGlobalProtocolBlockParserRuleCall_2_1_0() { return cBlocksGlobalProtocolBlockParserRuleCall_2_1_0; }
	}

	public class GlobalInterruptibleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GlobalInterruptible");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInterruptibleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cScopeAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cScopeIDTerminalRuleCall_1_0_0 = (RuleCall)cScopeAssignment_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cBlockAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBlockGlobalProtocolBlockParserRuleCall_2_0 = (RuleCall)cBlockAssignment_2.eContents().get(0);
		private final Keyword cWithKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInterruptsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInterruptsGlobalInterruptParserRuleCall_5_0 = (RuleCall)cInterruptsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		/// **
		// * Section 3.7.8 Global Interruptible
		// * / GlobalInterruptible:
		//	"interruptible" (scope=ID ":")? block=GlobalProtocolBlock "with" "{" interrupts+=GlobalInterrupt* "}";
		public ParserRule getRule() { return rule; }

		//"interruptible" (scope=ID ":")? block=GlobalProtocolBlock "with" "{" interrupts+=GlobalInterrupt* "}"
		public Group getGroup() { return cGroup; }

		//"interruptible"
		public Keyword getInterruptibleKeyword_0() { return cInterruptibleKeyword_0; }

		//(scope=ID ":")?
		public Group getGroup_1() { return cGroup_1; }

		//scope=ID
		public Assignment getScopeAssignment_1_0() { return cScopeAssignment_1_0; }

		//ID
		public RuleCall getScopeIDTerminalRuleCall_1_0_0() { return cScopeIDTerminalRuleCall_1_0_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//block=GlobalProtocolBlock
		public Assignment getBlockAssignment_2() { return cBlockAssignment_2; }

		//GlobalProtocolBlock
		public RuleCall getBlockGlobalProtocolBlockParserRuleCall_2_0() { return cBlockGlobalProtocolBlockParserRuleCall_2_0; }

		//"with"
		public Keyword getWithKeyword_3() { return cWithKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//interrupts+=GlobalInterrupt*
		public Assignment getInterruptsAssignment_5() { return cInterruptsAssignment_5; }

		//GlobalInterrupt
		public RuleCall getInterruptsGlobalInterruptParserRuleCall_5_0() { return cInterruptsGlobalInterruptParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class GlobalInterruptElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GlobalInterrupt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMessagesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMessagesMessageParserRuleCall_0_0 = (RuleCall)cMessagesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMessagesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cMessagesMessageParserRuleCall_1_1_0 = (RuleCall)cMessagesAssignment_1_1.eContents().get(0);
		private final Keyword cByKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRoleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRoleIDTerminalRuleCall_3_0 = (RuleCall)cRoleAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//GlobalInterrupt:
		//	messages+=Message ("," messages+=Message)* "by" role=ID ";";
		public ParserRule getRule() { return rule; }

		//messages+=Message ("," messages+=Message)* "by" role=ID ";"
		public Group getGroup() { return cGroup; }

		//messages+=Message
		public Assignment getMessagesAssignment_0() { return cMessagesAssignment_0; }

		//Message
		public RuleCall getMessagesMessageParserRuleCall_0_0() { return cMessagesMessageParserRuleCall_0_0; }

		//("," messages+=Message)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//messages+=Message
		public Assignment getMessagesAssignment_1_1() { return cMessagesAssignment_1_1; }

		//Message
		public RuleCall getMessagesMessageParserRuleCall_1_1_0() { return cMessagesMessageParserRuleCall_1_1_0; }

		//"by"
		public Keyword getByKeyword_2() { return cByKeyword_2; }

		//role=ID
		public Assignment getRoleAssignment_3() { return cRoleAssignment_3; }

		//ID
		public RuleCall getRoleIDTerminalRuleCall_3_0() { return cRoleIDTerminalRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class GlobalDoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GlobalDo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cScopeAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cScopeIDTerminalRuleCall_1_0_0 = (RuleCall)cScopeAssignment_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cMemberAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMemberIDTerminalRuleCall_2_0 = (RuleCall)cMemberAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLessThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cArgumentsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cArgumentsArgumentParserRuleCall_3_1_0 = (RuleCall)cArgumentsAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cArgumentsAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cArgumentsArgumentParserRuleCall_3_2_1_0 = (RuleCall)cArgumentsAssignment_3_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRolesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRolesRoleInstantiationParserRuleCall_5_0 = (RuleCall)cRolesAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRolesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRolesRoleInstantiationParserRuleCall_6_1_0 = (RuleCall)cRolesAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		/// **
		// * Section 3.7.9 Global Do
		// * / GlobalDo:
		//	"do" (scope=ID ":")? member=ID ("<" arguments+=Argument ("," arguments+=Argument)* ">")? "(" roles+=RoleInstantiation
		//	("," roles+=RoleInstantiation)* ")" ";";
		public ParserRule getRule() { return rule; }

		//"do" (scope=ID ":")? member=ID ("<" arguments+=Argument ("," arguments+=Argument)* ">")? "(" roles+=RoleInstantiation
		//("," roles+=RoleInstantiation)* ")" ";"
		public Group getGroup() { return cGroup; }

		//"do"
		public Keyword getDoKeyword_0() { return cDoKeyword_0; }

		//(scope=ID ":")?
		public Group getGroup_1() { return cGroup_1; }

		//scope=ID
		public Assignment getScopeAssignment_1_0() { return cScopeAssignment_1_0; }

		//ID
		public RuleCall getScopeIDTerminalRuleCall_1_0_0() { return cScopeIDTerminalRuleCall_1_0_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//member=ID
		public Assignment getMemberAssignment_2() { return cMemberAssignment_2; }

		//ID
		public RuleCall getMemberIDTerminalRuleCall_2_0() { return cMemberIDTerminalRuleCall_2_0; }

		//("<" arguments+=Argument ("," arguments+=Argument)* ">")?
		public Group getGroup_3() { return cGroup_3; }

		//"<"
		public Keyword getLessThanSignKeyword_3_0() { return cLessThanSignKeyword_3_0; }

		//arguments+=Argument
		public Assignment getArgumentsAssignment_3_1() { return cArgumentsAssignment_3_1; }

		//Argument
		public RuleCall getArgumentsArgumentParserRuleCall_3_1_0() { return cArgumentsArgumentParserRuleCall_3_1_0; }

		//("," arguments+=Argument)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//arguments+=Argument
		public Assignment getArgumentsAssignment_3_2_1() { return cArgumentsAssignment_3_2_1; }

		//Argument
		public RuleCall getArgumentsArgumentParserRuleCall_3_2_1_0() { return cArgumentsArgumentParserRuleCall_3_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_3_3() { return cGreaterThanSignKeyword_3_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }

		//roles+=RoleInstantiation
		public Assignment getRolesAssignment_5() { return cRolesAssignment_5; }

		//RoleInstantiation
		public RuleCall getRolesRoleInstantiationParserRuleCall_5_0() { return cRolesRoleInstantiationParserRuleCall_5_0; }

		//("," roles+=RoleInstantiation)*
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//roles+=RoleInstantiation
		public Assignment getRolesAssignment_6_1() { return cRolesAssignment_6_1; }

		//RoleInstantiation
		public RuleCall getRolesRoleInstantiationParserRuleCall_6_1_0() { return cRolesRoleInstantiationParserRuleCall_6_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}

	public class LocalProtocolDeclElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocalProtocolDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLocalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cProtocolKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cAtKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRoleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRoleIDTerminalRuleCall_4_0 = (RuleCall)cRoleAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLessThanSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cParametersAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cParametersParameterDeclParserRuleCall_5_1_0 = (RuleCall)cParametersAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cParametersAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cParametersParameterDeclParserRuleCall_5_2_1_0 = (RuleCall)cParametersAssignment_5_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cRolesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cRolesRoleDeclParserRuleCall_7_0 = (RuleCall)cRolesAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cRolesAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cRolesRoleDeclParserRuleCall_8_1_0 = (RuleCall)cRolesAssignment_8_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Alternatives cAlternatives_10 = (Alternatives)cGroup.eContents().get(10);
		private final Assignment cBlockAssignment_10_0 = (Assignment)cAlternatives_10.eContents().get(0);
		private final RuleCall cBlockLocalProtocolBlockParserRuleCall_10_0_0 = (RuleCall)cBlockAssignment_10_0.eContents().get(0);
		private final Group cGroup_10_1 = (Group)cAlternatives_10.eContents().get(1);
		private final Keyword cInstantiatesKeyword_10_1_0 = (Keyword)cGroup_10_1.eContents().get(0);
		private final Assignment cInstantiatesAssignment_10_1_1 = (Assignment)cGroup_10_1.eContents().get(1);
		private final RuleCall cInstantiatesIDTerminalRuleCall_10_1_1_0 = (RuleCall)cInstantiatesAssignment_10_1_1.eContents().get(0);
		private final Group cGroup_10_1_2 = (Group)cGroup_10_1.eContents().get(2);
		private final Keyword cLessThanSignKeyword_10_1_2_0 = (Keyword)cGroup_10_1_2.eContents().get(0);
		private final Assignment cArgumentsAssignment_10_1_2_1 = (Assignment)cGroup_10_1_2.eContents().get(1);
		private final RuleCall cArgumentsArgumentParserRuleCall_10_1_2_1_0 = (RuleCall)cArgumentsAssignment_10_1_2_1.eContents().get(0);
		private final Group cGroup_10_1_2_2 = (Group)cGroup_10_1_2.eContents().get(2);
		private final Keyword cCommaKeyword_10_1_2_2_0 = (Keyword)cGroup_10_1_2_2.eContents().get(0);
		private final Assignment cArgumentsAssignment_10_1_2_2_1 = (Assignment)cGroup_10_1_2_2.eContents().get(1);
		private final RuleCall cArgumentsArgumentParserRuleCall_10_1_2_2_1_0 = (RuleCall)cArgumentsAssignment_10_1_2_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_10_1_2_3 = (Keyword)cGroup_10_1_2.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_10_1_3 = (Keyword)cGroup_10_1.eContents().get(3);
		private final Assignment cRoleInstantiationsAssignment_10_1_4 = (Assignment)cGroup_10_1.eContents().get(4);
		private final RuleCall cRoleInstantiationsRoleInstantiationParserRuleCall_10_1_4_0 = (RuleCall)cRoleInstantiationsAssignment_10_1_4.eContents().get(0);
		private final Group cGroup_10_1_5 = (Group)cGroup_10_1.eContents().get(5);
		private final Keyword cCommaKeyword_10_1_5_0 = (Keyword)cGroup_10_1_5.eContents().get(0);
		private final Assignment cRoleInstantiationsAssignment_10_1_5_1 = (Assignment)cGroup_10_1_5.eContents().get(1);
		private final RuleCall cRoleInstantiationsRoleInstantiationParserRuleCall_10_1_5_1_0 = (RuleCall)cRoleInstantiationsAssignment_10_1_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_10_1_6 = (Keyword)cGroup_10_1.eContents().get(6);
		private final Keyword cSemicolonKeyword_10_1_7 = (Keyword)cGroup_10_1.eContents().get(7);
		
		/// *
		// * Section 3.8 Local Protocol Declarations
		// * / LocalProtocolDecl:
		//	"local" "protocol" name=ID "at" role=ID ("<" parameters+=ParameterDecl ("," parameters+=ParameterDecl)* ">")? "("
		//	roles+=RoleDecl ("," roles+=RoleDecl)* ")" (block=LocalProtocolBlock | "instantiates" instantiates=ID ("<"
		//	arguments+=Argument ("," arguments+=Argument)* ">")? "(" roleInstantiations+=RoleInstantiation (","
		//	roleInstantiations+=RoleInstantiation)* ")" ";");
		public ParserRule getRule() { return rule; }

		//"local" "protocol" name=ID "at" role=ID ("<" parameters+=ParameterDecl ("," parameters+=ParameterDecl)* ">")? "("
		//roles+=RoleDecl ("," roles+=RoleDecl)* ")" (block=LocalProtocolBlock | "instantiates" instantiates=ID ("<"
		//arguments+=Argument ("," arguments+=Argument)* ">")? "(" roleInstantiations+=RoleInstantiation (","
		//roleInstantiations+=RoleInstantiation)* ")" ";")
		public Group getGroup() { return cGroup; }

		//"local"
		public Keyword getLocalKeyword_0() { return cLocalKeyword_0; }

		//"protocol"
		public Keyword getProtocolKeyword_1() { return cProtocolKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"at"
		public Keyword getAtKeyword_3() { return cAtKeyword_3; }

		//role=ID
		public Assignment getRoleAssignment_4() { return cRoleAssignment_4; }

		//ID
		public RuleCall getRoleIDTerminalRuleCall_4_0() { return cRoleIDTerminalRuleCall_4_0; }

		//("<" parameters+=ParameterDecl ("," parameters+=ParameterDecl)* ">")?
		public Group getGroup_5() { return cGroup_5; }

		//"<"
		public Keyword getLessThanSignKeyword_5_0() { return cLessThanSignKeyword_5_0; }

		//parameters+=ParameterDecl
		public Assignment getParametersAssignment_5_1() { return cParametersAssignment_5_1; }

		//ParameterDecl
		public RuleCall getParametersParameterDeclParserRuleCall_5_1_0() { return cParametersParameterDeclParserRuleCall_5_1_0; }

		//("," parameters+=ParameterDecl)*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }

		//parameters+=ParameterDecl
		public Assignment getParametersAssignment_5_2_1() { return cParametersAssignment_5_2_1; }

		//ParameterDecl
		public RuleCall getParametersParameterDeclParserRuleCall_5_2_1_0() { return cParametersParameterDeclParserRuleCall_5_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_5_3() { return cGreaterThanSignKeyword_5_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }

		//roles+=RoleDecl
		public Assignment getRolesAssignment_7() { return cRolesAssignment_7; }

		//RoleDecl
		public RuleCall getRolesRoleDeclParserRuleCall_7_0() { return cRolesRoleDeclParserRuleCall_7_0; }

		//("," roles+=RoleDecl)*
		public Group getGroup_8() { return cGroup_8; }

		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }

		//roles+=RoleDecl
		public Assignment getRolesAssignment_8_1() { return cRolesAssignment_8_1; }

		//RoleDecl
		public RuleCall getRolesRoleDeclParserRuleCall_8_1_0() { return cRolesRoleDeclParserRuleCall_8_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }

		//block=LocalProtocolBlock | "instantiates" instantiates=ID ("<" arguments+=Argument ("," arguments+=Argument)* ">")? "("
		//roleInstantiations+=RoleInstantiation ("," roleInstantiations+=RoleInstantiation)* ")" ";"
		public Alternatives getAlternatives_10() { return cAlternatives_10; }

		//block=LocalProtocolBlock
		public Assignment getBlockAssignment_10_0() { return cBlockAssignment_10_0; }

		//LocalProtocolBlock
		public RuleCall getBlockLocalProtocolBlockParserRuleCall_10_0_0() { return cBlockLocalProtocolBlockParserRuleCall_10_0_0; }

		//"instantiates" instantiates=ID ("<" arguments+=Argument ("," arguments+=Argument)* ">")? "("
		//roleInstantiations+=RoleInstantiation ("," roleInstantiations+=RoleInstantiation)* ")" ";"
		public Group getGroup_10_1() { return cGroup_10_1; }

		//"instantiates"
		public Keyword getInstantiatesKeyword_10_1_0() { return cInstantiatesKeyword_10_1_0; }

		//instantiates=ID
		public Assignment getInstantiatesAssignment_10_1_1() { return cInstantiatesAssignment_10_1_1; }

		//ID
		public RuleCall getInstantiatesIDTerminalRuleCall_10_1_1_0() { return cInstantiatesIDTerminalRuleCall_10_1_1_0; }

		//("<" arguments+=Argument ("," arguments+=Argument)* ">")?
		public Group getGroup_10_1_2() { return cGroup_10_1_2; }

		//"<"
		public Keyword getLessThanSignKeyword_10_1_2_0() { return cLessThanSignKeyword_10_1_2_0; }

		//arguments+=Argument
		public Assignment getArgumentsAssignment_10_1_2_1() { return cArgumentsAssignment_10_1_2_1; }

		//Argument
		public RuleCall getArgumentsArgumentParserRuleCall_10_1_2_1_0() { return cArgumentsArgumentParserRuleCall_10_1_2_1_0; }

		//("," arguments+=Argument)*
		public Group getGroup_10_1_2_2() { return cGroup_10_1_2_2; }

		//","
		public Keyword getCommaKeyword_10_1_2_2_0() { return cCommaKeyword_10_1_2_2_0; }

		//arguments+=Argument
		public Assignment getArgumentsAssignment_10_1_2_2_1() { return cArgumentsAssignment_10_1_2_2_1; }

		//Argument
		public RuleCall getArgumentsArgumentParserRuleCall_10_1_2_2_1_0() { return cArgumentsArgumentParserRuleCall_10_1_2_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_10_1_2_3() { return cGreaterThanSignKeyword_10_1_2_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_10_1_3() { return cLeftParenthesisKeyword_10_1_3; }

		//roleInstantiations+=RoleInstantiation
		public Assignment getRoleInstantiationsAssignment_10_1_4() { return cRoleInstantiationsAssignment_10_1_4; }

		//RoleInstantiation
		public RuleCall getRoleInstantiationsRoleInstantiationParserRuleCall_10_1_4_0() { return cRoleInstantiationsRoleInstantiationParserRuleCall_10_1_4_0; }

		//("," roleInstantiations+=RoleInstantiation)*
		public Group getGroup_10_1_5() { return cGroup_10_1_5; }

		//","
		public Keyword getCommaKeyword_10_1_5_0() { return cCommaKeyword_10_1_5_0; }

		//roleInstantiations+=RoleInstantiation
		public Assignment getRoleInstantiationsAssignment_10_1_5_1() { return cRoleInstantiationsAssignment_10_1_5_1; }

		//RoleInstantiation
		public RuleCall getRoleInstantiationsRoleInstantiationParserRuleCall_10_1_5_1_0() { return cRoleInstantiationsRoleInstantiationParserRuleCall_10_1_5_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_10_1_6() { return cRightParenthesisKeyword_10_1_6; }

		//";"
		public Keyword getSemicolonKeyword_10_1_7() { return cSemicolonKeyword_10_1_7; }
	}

	public class LocalProtocolBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocalProtocolBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLocalProtocolBlockAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActivitiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActivitiesLlobalInteractionParserRuleCall_2_0 = (RuleCall)cActivitiesAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		/// **
		// * Section 3.8.3 Local Interaction Blocks and Sequences
		// * / LocalProtocolBlock:
		//	{LocalProtocolBlock} "{" activities+=LlobalInteraction* "}";
		public ParserRule getRule() { return rule; }

		//{LocalProtocolBlock} "{" activities+=LlobalInteraction* "}"
		public Group getGroup() { return cGroup; }

		//{LocalProtocolBlock}
		public Action getLocalProtocolBlockAction_0() { return cLocalProtocolBlockAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//activities+=LlobalInteraction*
		public Assignment getActivitiesAssignment_2() { return cActivitiesAssignment_2; }

		//LlobalInteraction
		public RuleCall getActivitiesLlobalInteractionParserRuleCall_2_0() { return cActivitiesLlobalInteractionParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class LlobalInteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LlobalInteraction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLocalSendParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLocalReceiveParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLocalChoiceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLocalParallelParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cLocalRecursionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cLocalContinueParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cLocalInterruptibleParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cLocalDoParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		/// *|
		//	localspawn* / LlobalInteraction:
		//	LocalSend | LocalReceive | LocalChoice | LocalParallel | LocalRecursion | LocalContinue | LocalInterruptible |
		//	LocalDo;
		public ParserRule getRule() { return rule; }

		//LocalSend | LocalReceive | LocalChoice | LocalParallel | LocalRecursion | LocalContinue | LocalInterruptible | LocalDo
		public Alternatives getAlternatives() { return cAlternatives; }

		//LocalSend
		public RuleCall getLocalSendParserRuleCall_0() { return cLocalSendParserRuleCall_0; }

		//LocalReceive
		public RuleCall getLocalReceiveParserRuleCall_1() { return cLocalReceiveParserRuleCall_1; }

		//LocalChoice
		public RuleCall getLocalChoiceParserRuleCall_2() { return cLocalChoiceParserRuleCall_2; }

		//LocalParallel
		public RuleCall getLocalParallelParserRuleCall_3() { return cLocalParallelParserRuleCall_3; }

		//LocalRecursion
		public RuleCall getLocalRecursionParserRuleCall_4() { return cLocalRecursionParserRuleCall_4; }

		//LocalContinue
		public RuleCall getLocalContinueParserRuleCall_5() { return cLocalContinueParserRuleCall_5; }

		//LocalInterruptible
		public RuleCall getLocalInterruptibleParserRuleCall_6() { return cLocalInterruptibleParserRuleCall_6; }

		//LocalDo
		public RuleCall getLocalDoParserRuleCall_7() { return cLocalDoParserRuleCall_7; }
	}

	public class LocalSendElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocalSend");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMessageAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMessageMessageParserRuleCall_0_0 = (RuleCall)cMessageAssignment_0.eContents().get(0);
		private final Keyword cToKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cToRolesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cToRolesIDTerminalRuleCall_2_0 = (RuleCall)cToRolesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cToRolesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cToRolesIDTerminalRuleCall_3_1_0 = (RuleCall)cToRolesAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		/// **
		// * Section 3.8.4 Local Send and Receive
		// * / LocalSend:
		//	message=Message "to" toRoles+=ID ("," toRoles+=ID)* ";";
		public ParserRule getRule() { return rule; }

		//message=Message "to" toRoles+=ID ("," toRoles+=ID)* ";"
		public Group getGroup() { return cGroup; }

		//message=Message
		public Assignment getMessageAssignment_0() { return cMessageAssignment_0; }

		//Message
		public RuleCall getMessageMessageParserRuleCall_0_0() { return cMessageMessageParserRuleCall_0_0; }

		//"to"
		public Keyword getToKeyword_1() { return cToKeyword_1; }

		//toRoles+=ID
		public Assignment getToRolesAssignment_2() { return cToRolesAssignment_2; }

		//ID
		public RuleCall getToRolesIDTerminalRuleCall_2_0() { return cToRolesIDTerminalRuleCall_2_0; }

		//("," toRoles+=ID)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//toRoles+=ID
		public Assignment getToRolesAssignment_3_1() { return cToRolesAssignment_3_1; }

		//ID
		public RuleCall getToRolesIDTerminalRuleCall_3_1_0() { return cToRolesIDTerminalRuleCall_3_1_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class LocalReceiveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocalReceive");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMessageAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMessageMessageParserRuleCall_0_0 = (RuleCall)cMessageAssignment_0.eContents().get(0);
		private final Keyword cFromKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFromRoleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFromRoleIDTerminalRuleCall_2_0 = (RuleCall)cFromRoleAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//LocalReceive:
		//	message=Message "from" fromRole=ID ";";
		public ParserRule getRule() { return rule; }

		//message=Message "from" fromRole=ID ";"
		public Group getGroup() { return cGroup; }

		//message=Message
		public Assignment getMessageAssignment_0() { return cMessageAssignment_0; }

		//Message
		public RuleCall getMessageMessageParserRuleCall_0_0() { return cMessageMessageParserRuleCall_0_0; }

		//"from"
		public Keyword getFromKeyword_1() { return cFromKeyword_1; }

		//fromRole=ID
		public Assignment getFromRoleAssignment_2() { return cFromRoleAssignment_2; }

		//ID
		public RuleCall getFromRoleIDTerminalRuleCall_2_0() { return cFromRoleIDTerminalRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class LocalChoiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocalChoice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChoiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRoleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRoleIDTerminalRuleCall_2_0 = (RuleCall)cRoleAssignment_2.eContents().get(0);
		private final Assignment cBlocksAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBlocksLocalProtocolBlockParserRuleCall_3_0 = (RuleCall)cBlocksAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOrKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBlocksAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBlocksLocalProtocolBlockParserRuleCall_4_1_0 = (RuleCall)cBlocksAssignment_4_1.eContents().get(0);
		
		/// **
		// * Section 3.8.5 Local Choice
		// * / LocalChoice:
		//	"choice" "at" role=ID blocks+=LocalProtocolBlock ("or" blocks+=LocalProtocolBlock)*;
		public ParserRule getRule() { return rule; }

		//"choice" "at" role=ID blocks+=LocalProtocolBlock ("or" blocks+=LocalProtocolBlock)*
		public Group getGroup() { return cGroup; }

		//"choice"
		public Keyword getChoiceKeyword_0() { return cChoiceKeyword_0; }

		//"at"
		public Keyword getAtKeyword_1() { return cAtKeyword_1; }

		//role=ID
		public Assignment getRoleAssignment_2() { return cRoleAssignment_2; }

		//ID
		public RuleCall getRoleIDTerminalRuleCall_2_0() { return cRoleIDTerminalRuleCall_2_0; }

		//blocks+=LocalProtocolBlock
		public Assignment getBlocksAssignment_3() { return cBlocksAssignment_3; }

		//LocalProtocolBlock
		public RuleCall getBlocksLocalProtocolBlockParserRuleCall_3_0() { return cBlocksLocalProtocolBlockParserRuleCall_3_0; }

		//("or" blocks+=LocalProtocolBlock)*
		public Group getGroup_4() { return cGroup_4; }

		//"or"
		public Keyword getOrKeyword_4_0() { return cOrKeyword_4_0; }

		//blocks+=LocalProtocolBlock
		public Assignment getBlocksAssignment_4_1() { return cBlocksAssignment_4_1; }

		//LocalProtocolBlock
		public RuleCall getBlocksLocalProtocolBlockParserRuleCall_4_1_0() { return cBlocksLocalProtocolBlockParserRuleCall_4_1_0; }
	}

	public class LocalRecursionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocalRecursion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRecKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLabelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLabelIDTerminalRuleCall_1_0 = (RuleCall)cLabelAssignment_1.eContents().get(0);
		private final Assignment cBlockAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBlockLocalProtocolBlockParserRuleCall_2_0 = (RuleCall)cBlockAssignment_2.eContents().get(0);
		
		/// **
		// * Section 3.8.6 Local Recursion
		// * / LocalRecursion:
		//	"rec" label=ID block=LocalProtocolBlock;
		public ParserRule getRule() { return rule; }

		//"rec" label=ID block=LocalProtocolBlock
		public Group getGroup() { return cGroup; }

		//"rec"
		public Keyword getRecKeyword_0() { return cRecKeyword_0; }

		//label=ID
		public Assignment getLabelAssignment_1() { return cLabelAssignment_1; }

		//ID
		public RuleCall getLabelIDTerminalRuleCall_1_0() { return cLabelIDTerminalRuleCall_1_0; }

		//block=LocalProtocolBlock
		public Assignment getBlockAssignment_2() { return cBlockAssignment_2; }

		//LocalProtocolBlock
		public RuleCall getBlockLocalProtocolBlockParserRuleCall_2_0() { return cBlockLocalProtocolBlockParserRuleCall_2_0; }
	}

	public class LocalContinueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocalContinue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContinueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLabelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLabelIDTerminalRuleCall_1_0 = (RuleCall)cLabelAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//LocalContinue:
		//	"continue" label=ID ";";
		public ParserRule getRule() { return rule; }

		//"continue" label=ID ";"
		public Group getGroup() { return cGroup; }

		//"continue"
		public Keyword getContinueKeyword_0() { return cContinueKeyword_0; }

		//label=ID
		public Assignment getLabelAssignment_1() { return cLabelAssignment_1; }

		//ID
		public RuleCall getLabelIDTerminalRuleCall_1_0() { return cLabelIDTerminalRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class LocalParallelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocalParallel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cBlocksAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBlocksLocalProtocolBlockParserRuleCall_1_0 = (RuleCall)cBlocksAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAndKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cBlocksAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cBlocksLocalProtocolBlockParserRuleCall_2_1_0 = (RuleCall)cBlocksAssignment_2_1.eContents().get(0);
		
		/// **
		// * Section 3.8.7 Local Parallel
		// * / LocalParallel:
		//	"par" blocks+=LocalProtocolBlock ("and" blocks+=LocalProtocolBlock)*;
		public ParserRule getRule() { return rule; }

		//"par" blocks+=LocalProtocolBlock ("and" blocks+=LocalProtocolBlock)*
		public Group getGroup() { return cGroup; }

		//"par"
		public Keyword getParKeyword_0() { return cParKeyword_0; }

		//blocks+=LocalProtocolBlock
		public Assignment getBlocksAssignment_1() { return cBlocksAssignment_1; }

		//LocalProtocolBlock
		public RuleCall getBlocksLocalProtocolBlockParserRuleCall_1_0() { return cBlocksLocalProtocolBlockParserRuleCall_1_0; }

		//("and" blocks+=LocalProtocolBlock)*
		public Group getGroup_2() { return cGroup_2; }

		//"and"
		public Keyword getAndKeyword_2_0() { return cAndKeyword_2_0; }

		//blocks+=LocalProtocolBlock
		public Assignment getBlocksAssignment_2_1() { return cBlocksAssignment_2_1; }

		//LocalProtocolBlock
		public RuleCall getBlocksLocalProtocolBlockParserRuleCall_2_1_0() { return cBlocksLocalProtocolBlockParserRuleCall_2_1_0; }
	}

	public class LocalInterruptibleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocalInterruptible");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInterruptibleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cScopeAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cScopeIDTerminalRuleCall_1_0_0 = (RuleCall)cScopeAssignment_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cBlockAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBlockLocalProtocolBlockParserRuleCall_2_0 = (RuleCall)cBlockAssignment_2.eContents().get(0);
		private final Keyword cWithKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cThrowAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cThrowLocalThrowParserRuleCall_5_0 = (RuleCall)cThrowAssignment_5.eContents().get(0);
		private final Assignment cCatchesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cCatchesLocalCatchParserRuleCall_6_0 = (RuleCall)cCatchesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		/// **
		// * Section 3.8.8 Local Interruptible
		// * / LocalInterruptible:
		//	"interruptible" (scope=ID ":")? block=LocalProtocolBlock "with" "{" throw=LocalThrow? catches+=LocalCatch* "}";
		public ParserRule getRule() { return rule; }

		//"interruptible" (scope=ID ":")? block=LocalProtocolBlock "with" "{" throw=LocalThrow? catches+=LocalCatch* "}"
		public Group getGroup() { return cGroup; }

		//"interruptible"
		public Keyword getInterruptibleKeyword_0() { return cInterruptibleKeyword_0; }

		//(scope=ID ":")?
		public Group getGroup_1() { return cGroup_1; }

		//scope=ID
		public Assignment getScopeAssignment_1_0() { return cScopeAssignment_1_0; }

		//ID
		public RuleCall getScopeIDTerminalRuleCall_1_0_0() { return cScopeIDTerminalRuleCall_1_0_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//block=LocalProtocolBlock
		public Assignment getBlockAssignment_2() { return cBlockAssignment_2; }

		//LocalProtocolBlock
		public RuleCall getBlockLocalProtocolBlockParserRuleCall_2_0() { return cBlockLocalProtocolBlockParserRuleCall_2_0; }

		//"with"
		public Keyword getWithKeyword_3() { return cWithKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//throw=LocalThrow?
		public Assignment getThrowAssignment_5() { return cThrowAssignment_5; }

		//LocalThrow
		public RuleCall getThrowLocalThrowParserRuleCall_5_0() { return cThrowLocalThrowParserRuleCall_5_0; }

		//catches+=LocalCatch*
		public Assignment getCatchesAssignment_6() { return cCatchesAssignment_6; }

		//LocalCatch
		public RuleCall getCatchesLocalCatchParserRuleCall_6_0() { return cCatchesLocalCatchParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class LocalThrowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocalThrow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThrowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMessagesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMessagesMessageParserRuleCall_1_0 = (RuleCall)cMessagesAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMessagesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cMessagesMessageParserRuleCall_2_1_0 = (RuleCall)cMessagesAssignment_2_1.eContents().get(0);
		private final Keyword cToKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cToRolesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cToRolesIDTerminalRuleCall_4_0 = (RuleCall)cToRolesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cToRolesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cToRolesIDTerminalRuleCall_5_1_0 = (RuleCall)cToRolesAssignment_5_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//LocalThrow:
		//	"throw" messages+=Message ("," messages+=Message)* "to" toRoles+=ID ("," toRoles+=ID)* ";";
		public ParserRule getRule() { return rule; }

		//"throw" messages+=Message ("," messages+=Message)* "to" toRoles+=ID ("," toRoles+=ID)* ";"
		public Group getGroup() { return cGroup; }

		//"throw"
		public Keyword getThrowKeyword_0() { return cThrowKeyword_0; }

		//messages+=Message
		public Assignment getMessagesAssignment_1() { return cMessagesAssignment_1; }

		//Message
		public RuleCall getMessagesMessageParserRuleCall_1_0() { return cMessagesMessageParserRuleCall_1_0; }

		//("," messages+=Message)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//messages+=Message
		public Assignment getMessagesAssignment_2_1() { return cMessagesAssignment_2_1; }

		//Message
		public RuleCall getMessagesMessageParserRuleCall_2_1_0() { return cMessagesMessageParserRuleCall_2_1_0; }

		//"to"
		public Keyword getToKeyword_3() { return cToKeyword_3; }

		//toRoles+=ID
		public Assignment getToRolesAssignment_4() { return cToRolesAssignment_4; }

		//ID
		public RuleCall getToRolesIDTerminalRuleCall_4_0() { return cToRolesIDTerminalRuleCall_4_0; }

		//("," toRoles+=ID)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//toRoles+=ID
		public Assignment getToRolesAssignment_5_1() { return cToRolesAssignment_5_1; }

		//ID
		public RuleCall getToRolesIDTerminalRuleCall_5_1_0() { return cToRolesIDTerminalRuleCall_5_1_0; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class LocalCatchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocalCatch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCatchesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMessagesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMessagesMessageParserRuleCall_1_0 = (RuleCall)cMessagesAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMessagesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cMessagesMessageParserRuleCall_2_1_0 = (RuleCall)cMessagesAssignment_2_1.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFromRoleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFromRoleIDTerminalRuleCall_4_0 = (RuleCall)cFromRoleAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//LocalCatch:
		//	"catches" messages+=Message ("," messages+=Message)* "from" fromRole=ID ";";
		public ParserRule getRule() { return rule; }

		//"catches" messages+=Message ("," messages+=Message)* "from" fromRole=ID ";"
		public Group getGroup() { return cGroup; }

		//"catches"
		public Keyword getCatchesKeyword_0() { return cCatchesKeyword_0; }

		//messages+=Message
		public Assignment getMessagesAssignment_1() { return cMessagesAssignment_1; }

		//Message
		public RuleCall getMessagesMessageParserRuleCall_1_0() { return cMessagesMessageParserRuleCall_1_0; }

		//("," messages+=Message)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//messages+=Message
		public Assignment getMessagesAssignment_2_1() { return cMessagesAssignment_2_1; }

		//Message
		public RuleCall getMessagesMessageParserRuleCall_2_1_0() { return cMessagesMessageParserRuleCall_2_1_0; }

		//"from"
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }

		//fromRole=ID
		public Assignment getFromRoleAssignment_4() { return cFromRoleAssignment_4; }

		//ID
		public RuleCall getFromRoleIDTerminalRuleCall_4_0() { return cFromRoleIDTerminalRuleCall_4_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class LocalDoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocalDo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cScopeAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cScopeIDTerminalRuleCall_1_0_0 = (RuleCall)cScopeAssignment_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cMemberAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMemberIDTerminalRuleCall_2_0 = (RuleCall)cMemberAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLessThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cArgumentsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cArgumentsArgumentParserRuleCall_3_1_0 = (RuleCall)cArgumentsAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cArgumentsAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cArgumentsArgumentParserRuleCall_3_2_1_0 = (RuleCall)cArgumentsAssignment_3_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRolesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRolesRoleInstantiationParserRuleCall_5_0 = (RuleCall)cRolesAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRolesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRolesRoleInstantiationParserRuleCall_6_1_0 = (RuleCall)cRolesAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		/// **
		// * Section 3.8.9 Local Do
		// * / LocalDo:
		//	"do" (scope=ID ":")? member=ID ("<" arguments+=Argument ("," arguments+=Argument)* ">")? "(" roles+=RoleInstantiation
		//	("," roles+=RoleInstantiation)* ")" ";";
		public ParserRule getRule() { return rule; }

		//"do" (scope=ID ":")? member=ID ("<" arguments+=Argument ("," arguments+=Argument)* ">")? "(" roles+=RoleInstantiation
		//("," roles+=RoleInstantiation)* ")" ";"
		public Group getGroup() { return cGroup; }

		//"do"
		public Keyword getDoKeyword_0() { return cDoKeyword_0; }

		//(scope=ID ":")?
		public Group getGroup_1() { return cGroup_1; }

		//scope=ID
		public Assignment getScopeAssignment_1_0() { return cScopeAssignment_1_0; }

		//ID
		public RuleCall getScopeIDTerminalRuleCall_1_0_0() { return cScopeIDTerminalRuleCall_1_0_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//member=ID
		public Assignment getMemberAssignment_2() { return cMemberAssignment_2; }

		//ID
		public RuleCall getMemberIDTerminalRuleCall_2_0() { return cMemberIDTerminalRuleCall_2_0; }

		//("<" arguments+=Argument ("," arguments+=Argument)* ">")?
		public Group getGroup_3() { return cGroup_3; }

		//"<"
		public Keyword getLessThanSignKeyword_3_0() { return cLessThanSignKeyword_3_0; }

		//arguments+=Argument
		public Assignment getArgumentsAssignment_3_1() { return cArgumentsAssignment_3_1; }

		//Argument
		public RuleCall getArgumentsArgumentParserRuleCall_3_1_0() { return cArgumentsArgumentParserRuleCall_3_1_0; }

		//("," arguments+=Argument)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//arguments+=Argument
		public Assignment getArgumentsAssignment_3_2_1() { return cArgumentsAssignment_3_2_1; }

		//Argument
		public RuleCall getArgumentsArgumentParserRuleCall_3_2_1_0() { return cArgumentsArgumentParserRuleCall_3_2_1_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_3_3() { return cGreaterThanSignKeyword_3_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }

		//roles+=RoleInstantiation
		public Assignment getRolesAssignment_5() { return cRolesAssignment_5; }

		//RoleInstantiation
		public RuleCall getRolesRoleInstantiationParserRuleCall_5_0() { return cRolesRoleInstantiationParserRuleCall_5_0; }

		//("," roles+=RoleInstantiation)*
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//roles+=RoleInstantiation
		public Assignment getRolesAssignment_6_1() { return cRolesAssignment_6_1; }

		//RoleInstantiation
		public RuleCall getRolesRoleInstantiationParserRuleCall_6_1_0() { return cRolesRoleInstantiationParserRuleCall_6_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}
	
	
	private ModuleElements pModule;
	private ModuleNameElements pModuleName;
	private ImportDeclElements pImportDecl;
	private ImportModuleElements pImportModule;
	private ImportMemberElements pImportMember;
	private PayloadTypeDeclElements pPayloadTypeDecl;
	private MessageSignatureElements pMessageSignature;
	private PayloadElementElements pPayloadElement;
	private GlobalProtocolDeclElements pGlobalProtocolDecl;
	private RoleDeclElements pRoleDecl;
	private ParameterDeclElements pParameterDecl;
	private RoleInstantiationElements pRoleInstantiation;
	private ArgumentElements pArgument;
	private GlobalProtocolBlockElements pGlobalProtocolBlock;
	private GlobalInteractionElements pGlobalInteraction;
	private GlobalMessageTransferElements pGlobalMessageTransfer;
	private MessageElements pMessage;
	private GlobalChoiceElements pGlobalChoice;
	private GlobalRecursionElements pGlobalRecursion;
	private GlobalContinueElements pGlobalContinue;
	private GlobalParallelElements pGlobalParallel;
	private GlobalInterruptibleElements pGlobalInterruptible;
	private GlobalInterruptElements pGlobalInterrupt;
	private GlobalDoElements pGlobalDo;
	private LocalProtocolDeclElements pLocalProtocolDecl;
	private LocalProtocolBlockElements pLocalProtocolBlock;
	private LlobalInteractionElements pLlobalInteraction;
	private LocalSendElements pLocalSend;
	private LocalReceiveElements pLocalReceive;
	private LocalChoiceElements pLocalChoice;
	private LocalRecursionElements pLocalRecursion;
	private LocalContinueElements pLocalContinue;
	private LocalParallelElements pLocalParallel;
	private LocalInterruptibleElements pLocalInterruptible;
	private LocalThrowElements pLocalThrow;
	private LocalCatchElements pLocalCatch;
	private LocalDoElements pLocalDo;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public ScribbleDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.scribble.editor.dsl.ScribbleDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Module:
	//	"module" name=ModuleName ";" imports+=ImportDecl* types+=PayloadTypeDecl* (globals+=GlobalProtocolDecl |
	//	locals+=LocalProtocolDecl)*;
	public ModuleElements getModuleAccess() {
		return (pModule != null) ? pModule : (pModule = new ModuleElements());
	}
	
	public ParserRule getModuleRule() {
		return getModuleAccess().getRule();
	}

	//ModuleName:
	//	ID ("." ID)*;
	public ModuleNameElements getModuleNameAccess() {
		return (pModuleName != null) ? pModuleName : (pModuleName = new ModuleNameElements());
	}
	
	public ParserRule getModuleNameRule() {
		return getModuleNameAccess().getRule();
	}

	//ImportDecl:
	//	ImportModule | ImportMember;
	public ImportDeclElements getImportDeclAccess() {
		return (pImportDecl != null) ? pImportDecl : (pImportDecl = new ImportDeclElements());
	}
	
	public ParserRule getImportDeclRule() {
		return getImportDeclAccess().getRule();
	}

	//ImportModule:
	//	"import" name=ModuleName ("as" alias=ID)? ";";
	public ImportModuleElements getImportModuleAccess() {
		return (pImportModule != null) ? pImportModule : (pImportModule = new ImportModuleElements());
	}
	
	public ParserRule getImportModuleRule() {
		return getImportModuleAccess().getRule();
	}

	//ImportMember:
	//	"from" name=ModuleName "import" member=ID ("as" alias=ID)? ";";
	public ImportMemberElements getImportMemberAccess() {
		return (pImportMember != null) ? pImportMember : (pImportMember = new ImportMemberElements());
	}
	
	public ParserRule getImportMemberRule() {
		return getImportMemberAccess().getRule();
	}

	//PayloadTypeDecl:
	//	"type" "<" schema=ID ">" type=STRING "from" location=STRING "as" alias=ID ";";
	public PayloadTypeDeclElements getPayloadTypeDeclAccess() {
		return (pPayloadTypeDecl != null) ? pPayloadTypeDecl : (pPayloadTypeDecl = new PayloadTypeDeclElements());
	}
	
	public ParserRule getPayloadTypeDeclRule() {
		return getPayloadTypeDeclAccess().getRule();
	}

	/// **
	// * Section 3.5 Message Signatures
	// * / MessageSignature:
	//	{MessageSignature} operator=ID? "(" (types+=PayloadElement ("," types+=PayloadElement)*)? ")";
	public MessageSignatureElements getMessageSignatureAccess() {
		return (pMessageSignature != null) ? pMessageSignature : (pMessageSignature = new MessageSignatureElements());
	}
	
	public ParserRule getMessageSignatureRule() {
		return getMessageSignatureAccess().getRule();
	}

	//PayloadElement:
	//	(name=ID ":")? type=ID;
	public PayloadElementElements getPayloadElementAccess() {
		return (pPayloadElement != null) ? pPayloadElement : (pPayloadElement = new PayloadElementElements());
	}
	
	public ParserRule getPayloadElementRule() {
		return getPayloadElementAccess().getRule();
	}

	//GlobalProtocolDecl:
	//	"global" "protocol" name=ID ("<" parameters+=ParameterDecl ("," parameters+=ParameterDecl)* ">")? "(" roles+=RoleDecl
	//	("," roles+=RoleDecl)* ")" (block=GlobalProtocolBlock | "instantiates" instantiates=ID ("<" arguments+=Argument (","
	//	arguments+=Argument)* ">")? "(" roleInstantiations+=RoleInstantiation ("," roleInstantiations+=RoleInstantiation)* ")"
	//	";");
	public GlobalProtocolDeclElements getGlobalProtocolDeclAccess() {
		return (pGlobalProtocolDecl != null) ? pGlobalProtocolDecl : (pGlobalProtocolDecl = new GlobalProtocolDeclElements());
	}
	
	public ParserRule getGlobalProtocolDeclRule() {
		return getGlobalProtocolDeclAccess().getRule();
	}

	//RoleDecl:
	//	"role" name=ID ("as" alias=ID)?;
	public RoleDeclElements getRoleDeclAccess() {
		return (pRoleDecl != null) ? pRoleDecl : (pRoleDecl = new RoleDeclElements());
	}
	
	public ParserRule getRoleDeclRule() {
		return getRoleDeclAccess().getRule();
	}

	//ParameterDecl:
	//	"type" name=ID ("as" alias=ID)? | "sig" name=ID ("as" alias=ID)?;
	public ParameterDeclElements getParameterDeclAccess() {
		return (pParameterDecl != null) ? pParameterDecl : (pParameterDecl = new ParameterDeclElements());
	}
	
	public ParserRule getParameterDeclRule() {
		return getParameterDeclAccess().getRule();
	}

	//RoleInstantiation:
	//	name=ID ("as" alias=ID)?;
	public RoleInstantiationElements getRoleInstantiationAccess() {
		return (pRoleInstantiation != null) ? pRoleInstantiation : (pRoleInstantiation = new RoleInstantiationElements());
	}
	
	public ParserRule getRoleInstantiationRule() {
		return getRoleInstantiationAccess().getRule();
	}

	//Argument:
	//	signature=MessageSignature ("as" alias=ID)? | name=ID ("as" alias=ID)?;
	public ArgumentElements getArgumentAccess() {
		return (pArgument != null) ? pArgument : (pArgument = new ArgumentElements());
	}
	
	public ParserRule getArgumentRule() {
		return getArgumentAccess().getRule();
	}

	/// **
	// * Section 3.7.3 Global Interaction Sequences and Blocks
	// * / GlobalProtocolBlock:
	//	{GlobalProtocolBlock} "{" activities+=GlobalInteraction* "}";
	public GlobalProtocolBlockElements getGlobalProtocolBlockAccess() {
		return (pGlobalProtocolBlock != null) ? pGlobalProtocolBlock : (pGlobalProtocolBlock = new GlobalProtocolBlockElements());
	}
	
	public ParserRule getGlobalProtocolBlockRule() {
		return getGlobalProtocolBlockAccess().getRule();
	}

	/// *|
	//	globalspawn* / GlobalInteraction:
	//	GlobalMessageTransfer | GlobalChoice | GlobalRecursion | GlobalContinue | GlobalParallel | GlobalInterruptible |
	//	GlobalDo;
	public GlobalInteractionElements getGlobalInteractionAccess() {
		return (pGlobalInteraction != null) ? pGlobalInteraction : (pGlobalInteraction = new GlobalInteractionElements());
	}
	
	public ParserRule getGlobalInteractionRule() {
		return getGlobalInteractionAccess().getRule();
	}

	/// **
	// * Section 3.7.4 Global Message Transfer
	// * / GlobalMessageTransfer:
	//	message=Message "from" fromRole=ID "to" toRoles+=ID ("," toRoles+=ID)* ";";
	public GlobalMessageTransferElements getGlobalMessageTransferAccess() {
		return (pGlobalMessageTransfer != null) ? pGlobalMessageTransfer : (pGlobalMessageTransfer = new GlobalMessageTransferElements());
	}
	
	public ParserRule getGlobalMessageTransferRule() {
		return getGlobalMessageTransferAccess().getRule();
	}

	//Message:
	//	signature=MessageSignature | parameter=ID;
	public MessageElements getMessageAccess() {
		return (pMessage != null) ? pMessage : (pMessage = new MessageElements());
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}

	/// **
	// * Section 3.7.5 Global Choice
	// * / GlobalChoice:
	//	"choice" "at" role=ID blocks+=GlobalProtocolBlock ("or" blocks+=GlobalProtocolBlock)*;
	public GlobalChoiceElements getGlobalChoiceAccess() {
		return (pGlobalChoice != null) ? pGlobalChoice : (pGlobalChoice = new GlobalChoiceElements());
	}
	
	public ParserRule getGlobalChoiceRule() {
		return getGlobalChoiceAccess().getRule();
	}

	/// **
	// * Section 3.7.6 Global Recursion
	// * / GlobalRecursion:
	//	"rec" label=ID block=GlobalProtocolBlock;
	public GlobalRecursionElements getGlobalRecursionAccess() {
		return (pGlobalRecursion != null) ? pGlobalRecursion : (pGlobalRecursion = new GlobalRecursionElements());
	}
	
	public ParserRule getGlobalRecursionRule() {
		return getGlobalRecursionAccess().getRule();
	}

	//GlobalContinue:
	//	"continue" label=ID ";";
	public GlobalContinueElements getGlobalContinueAccess() {
		return (pGlobalContinue != null) ? pGlobalContinue : (pGlobalContinue = new GlobalContinueElements());
	}
	
	public ParserRule getGlobalContinueRule() {
		return getGlobalContinueAccess().getRule();
	}

	/// **
	// * Section 3.7.7 Global Parallel
	// * / GlobalParallel:
	//	"par" blocks+=GlobalProtocolBlock ("and" blocks+=GlobalProtocolBlock)*;
	public GlobalParallelElements getGlobalParallelAccess() {
		return (pGlobalParallel != null) ? pGlobalParallel : (pGlobalParallel = new GlobalParallelElements());
	}
	
	public ParserRule getGlobalParallelRule() {
		return getGlobalParallelAccess().getRule();
	}

	/// **
	// * Section 3.7.8 Global Interruptible
	// * / GlobalInterruptible:
	//	"interruptible" (scope=ID ":")? block=GlobalProtocolBlock "with" "{" interrupts+=GlobalInterrupt* "}";
	public GlobalInterruptibleElements getGlobalInterruptibleAccess() {
		return (pGlobalInterruptible != null) ? pGlobalInterruptible : (pGlobalInterruptible = new GlobalInterruptibleElements());
	}
	
	public ParserRule getGlobalInterruptibleRule() {
		return getGlobalInterruptibleAccess().getRule();
	}

	//GlobalInterrupt:
	//	messages+=Message ("," messages+=Message)* "by" role=ID ";";
	public GlobalInterruptElements getGlobalInterruptAccess() {
		return (pGlobalInterrupt != null) ? pGlobalInterrupt : (pGlobalInterrupt = new GlobalInterruptElements());
	}
	
	public ParserRule getGlobalInterruptRule() {
		return getGlobalInterruptAccess().getRule();
	}

	/// **
	// * Section 3.7.9 Global Do
	// * / GlobalDo:
	//	"do" (scope=ID ":")? member=ID ("<" arguments+=Argument ("," arguments+=Argument)* ">")? "(" roles+=RoleInstantiation
	//	("," roles+=RoleInstantiation)* ")" ";";
	public GlobalDoElements getGlobalDoAccess() {
		return (pGlobalDo != null) ? pGlobalDo : (pGlobalDo = new GlobalDoElements());
	}
	
	public ParserRule getGlobalDoRule() {
		return getGlobalDoAccess().getRule();
	}

	/// *
	// * Section 3.8 Local Protocol Declarations
	// * / LocalProtocolDecl:
	//	"local" "protocol" name=ID "at" role=ID ("<" parameters+=ParameterDecl ("," parameters+=ParameterDecl)* ">")? "("
	//	roles+=RoleDecl ("," roles+=RoleDecl)* ")" (block=LocalProtocolBlock | "instantiates" instantiates=ID ("<"
	//	arguments+=Argument ("," arguments+=Argument)* ">")? "(" roleInstantiations+=RoleInstantiation (","
	//	roleInstantiations+=RoleInstantiation)* ")" ";");
	public LocalProtocolDeclElements getLocalProtocolDeclAccess() {
		return (pLocalProtocolDecl != null) ? pLocalProtocolDecl : (pLocalProtocolDecl = new LocalProtocolDeclElements());
	}
	
	public ParserRule getLocalProtocolDeclRule() {
		return getLocalProtocolDeclAccess().getRule();
	}

	/// **
	// * Section 3.8.3 Local Interaction Blocks and Sequences
	// * / LocalProtocolBlock:
	//	{LocalProtocolBlock} "{" activities+=LlobalInteraction* "}";
	public LocalProtocolBlockElements getLocalProtocolBlockAccess() {
		return (pLocalProtocolBlock != null) ? pLocalProtocolBlock : (pLocalProtocolBlock = new LocalProtocolBlockElements());
	}
	
	public ParserRule getLocalProtocolBlockRule() {
		return getLocalProtocolBlockAccess().getRule();
	}

	/// *|
	//	localspawn* / LlobalInteraction:
	//	LocalSend | LocalReceive | LocalChoice | LocalParallel | LocalRecursion | LocalContinue | LocalInterruptible |
	//	LocalDo;
	public LlobalInteractionElements getLlobalInteractionAccess() {
		return (pLlobalInteraction != null) ? pLlobalInteraction : (pLlobalInteraction = new LlobalInteractionElements());
	}
	
	public ParserRule getLlobalInteractionRule() {
		return getLlobalInteractionAccess().getRule();
	}

	/// **
	// * Section 3.8.4 Local Send and Receive
	// * / LocalSend:
	//	message=Message "to" toRoles+=ID ("," toRoles+=ID)* ";";
	public LocalSendElements getLocalSendAccess() {
		return (pLocalSend != null) ? pLocalSend : (pLocalSend = new LocalSendElements());
	}
	
	public ParserRule getLocalSendRule() {
		return getLocalSendAccess().getRule();
	}

	//LocalReceive:
	//	message=Message "from" fromRole=ID ";";
	public LocalReceiveElements getLocalReceiveAccess() {
		return (pLocalReceive != null) ? pLocalReceive : (pLocalReceive = new LocalReceiveElements());
	}
	
	public ParserRule getLocalReceiveRule() {
		return getLocalReceiveAccess().getRule();
	}

	/// **
	// * Section 3.8.5 Local Choice
	// * / LocalChoice:
	//	"choice" "at" role=ID blocks+=LocalProtocolBlock ("or" blocks+=LocalProtocolBlock)*;
	public LocalChoiceElements getLocalChoiceAccess() {
		return (pLocalChoice != null) ? pLocalChoice : (pLocalChoice = new LocalChoiceElements());
	}
	
	public ParserRule getLocalChoiceRule() {
		return getLocalChoiceAccess().getRule();
	}

	/// **
	// * Section 3.8.6 Local Recursion
	// * / LocalRecursion:
	//	"rec" label=ID block=LocalProtocolBlock;
	public LocalRecursionElements getLocalRecursionAccess() {
		return (pLocalRecursion != null) ? pLocalRecursion : (pLocalRecursion = new LocalRecursionElements());
	}
	
	public ParserRule getLocalRecursionRule() {
		return getLocalRecursionAccess().getRule();
	}

	//LocalContinue:
	//	"continue" label=ID ";";
	public LocalContinueElements getLocalContinueAccess() {
		return (pLocalContinue != null) ? pLocalContinue : (pLocalContinue = new LocalContinueElements());
	}
	
	public ParserRule getLocalContinueRule() {
		return getLocalContinueAccess().getRule();
	}

	/// **
	// * Section 3.8.7 Local Parallel
	// * / LocalParallel:
	//	"par" blocks+=LocalProtocolBlock ("and" blocks+=LocalProtocolBlock)*;
	public LocalParallelElements getLocalParallelAccess() {
		return (pLocalParallel != null) ? pLocalParallel : (pLocalParallel = new LocalParallelElements());
	}
	
	public ParserRule getLocalParallelRule() {
		return getLocalParallelAccess().getRule();
	}

	/// **
	// * Section 3.8.8 Local Interruptible
	// * / LocalInterruptible:
	//	"interruptible" (scope=ID ":")? block=LocalProtocolBlock "with" "{" throw=LocalThrow? catches+=LocalCatch* "}";
	public LocalInterruptibleElements getLocalInterruptibleAccess() {
		return (pLocalInterruptible != null) ? pLocalInterruptible : (pLocalInterruptible = new LocalInterruptibleElements());
	}
	
	public ParserRule getLocalInterruptibleRule() {
		return getLocalInterruptibleAccess().getRule();
	}

	//LocalThrow:
	//	"throw" messages+=Message ("," messages+=Message)* "to" toRoles+=ID ("," toRoles+=ID)* ";";
	public LocalThrowElements getLocalThrowAccess() {
		return (pLocalThrow != null) ? pLocalThrow : (pLocalThrow = new LocalThrowElements());
	}
	
	public ParserRule getLocalThrowRule() {
		return getLocalThrowAccess().getRule();
	}

	//LocalCatch:
	//	"catches" messages+=Message ("," messages+=Message)* "from" fromRole=ID ";";
	public LocalCatchElements getLocalCatchAccess() {
		return (pLocalCatch != null) ? pLocalCatch : (pLocalCatch = new LocalCatchElements());
	}
	
	public ParserRule getLocalCatchRule() {
		return getLocalCatchAccess().getRule();
	}

	/// **
	// * Section 3.8.9 Local Do
	// * / LocalDo:
	//	"do" (scope=ID ":")? member=ID ("<" arguments+=Argument ("," arguments+=Argument)* ">")? "(" roles+=RoleInstantiation
	//	("," roles+=RoleInstantiation)* ")" ";";
	public LocalDoElements getLocalDoAccess() {
		return (pLocalDo != null) ? pLocalDo : (pLocalDo = new LocalDoElements());
	}
	
	public ParserRule getLocalDoRule() {
		return getLocalDoAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
